{"ts":1360902593037,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Representation of a musical scale\nvar Scale = function( type ){\n   this.type = type;\n   \n};\n\n/**\n * create a scale from a tonic note and a type\n */\nScale.fromTonicAndType = function( tonic, type ){\n    \n};\n\n/**\n * extend a scale over a number of octaves\n */\nScale.extend = function( startOctave, endOctave ){\n    this.startOctave = startOctave;\n    this.endOctave = endOctave;\n}"]],"start1":0,"start2":0,"length1":0,"length2":381}]],"length":381}
{"contributors":[],"silentsave":false,"ts":1360902602258,"patch":[[{"diffs":[[0,"ctave;\n}"],[1,"\n\nScale.prototype.type = function(){\n    return \"Scale\";\n}"]],"start1":373,"start2":373,"length1":8,"length2":66}]],"length":439,"saved":false}
