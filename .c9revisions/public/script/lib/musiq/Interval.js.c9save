{"ts":1360904152831,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * data structure for an interval\n */\nvar Interval = function( distance ){\n    \n    this.distance = distance;\n    this.octaves = Math.floor(this.distance/12);\n    this.relativeDistance = this.distance - this.octaves*12;\n    \n    //console.log(this.relativeDistance);\n    \n    this.name = function(){\n        return MUSIQ.intervalNames[this.relativeDistance];\n    }\n    \n    \n    \n};\n\nInterval.fromNotes = function( note1, note2 ){\n    return new Interval( note1.distance(note2) );\n};\n    \nInterval.fromName = function( name ){\n    return new Interval( MUSIQ.intervalNames.indexOf( name ) );\n};"]],"start1":0,"start2":0,"length1":0,"length2":597}]],"length":597}
{"contributors":[],"silentsave":false,"ts":1363905045668,"patch":[[{"diffs":[[0,"/**\n"],[1," * \n"],[0," * data "]],"start1":0,"start2":0,"length1":12,"length2":16},{"diffs":[[0,"nterval\n"],[1," * \n * @constructor\n * \n * @param distance {integer} - The number of semitones between the notes\n"],[0," */\nvar "]],"start1":34,"start2":34,"length1":16,"length2":113}]],"length":698,"saved":false}
{"ts":1363905082594,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"/**\n * take two notes and create a new Interval object from it\n * \n * @returns {Interval} - A new Interval object\n */\n"],[0,"Interval"]],"start1":481,"start2":481,"length1":16,"length2":134}]],"length":816,"saved":false}
{"ts":1363905128194,"patch":[[{"diffs":[[0,"from it\n * \n"],[1," * @param note1 {Note} - The first note\n * @param note2 {Note} - The second note\n * \n"],[0," * @returns "]],"start1":544,"start2":544,"length1":24,"length2":109},{"diffs":[[0,"};\n    \n"],[1,"/**\n * lookup the english name of the interval\n * \n * @returns {string} - the English name of the interval\n * \n */\n"],[0,"Interval"]],"start1":789,"start2":789,"length1":16,"length2":131}]],"length":1016,"saved":false}
{"ts":1363905206136,"patch":[[{"diffs":[[0,"val\n * \n"],[1," * can be one of the following:\n * \"unison\"\n   \"minor second\"\n   \"major second\"\n   \"minor third\"\n    \"major third\"\n   \"fourth\"\n   \"tritone\"\n   \"fifth\"\n   \"minor sixth\"\n   \"major sixth\"\n   \"minor seventh\"\n   \"major seventh\"\n   \"octave\"\n * \n"],[0," */\nInte"]],"start1":900,"start2":900,"length1":16,"length2":255}]],"length":1255,"saved":false}
