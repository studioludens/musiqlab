{"ts":1360890905400,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/** \n * the guitar note data object\n * @param guitar : a Guitar object this note belongs to\n * @param guitarString : a GuitarString object this note belongs to\n * @param fret : the GuitarFret this note belongs to\n * @param pos : the position as in [ string, fret ]\n * \n * @param state : an object representing the state of the note:\n *                      {   active: false,\n *                          ghosted: false,\n *                          tonic: false\n *                      }\n */\nvar GuitarNote = function( guitar, guitarString, fret, pos, state ){\n\n    this.guitar = guitar;\n    this.guitarString = guitarString;\n    this.fret = fret;\n    this.pos = pos;\n    \n    //console.log( this.pos );\n    \n    this.state = state || _.clone( GuitarNote.DEFAULT_STATE );\n    \n    /**\n     * create a Note object for easy access\n     */\n    this.note = new Note( guitarString.base + fret.pos );\n\n    //console.log( this.note );\n};\n\n/**\n * the default state of the guitar note. \n * when you use this, make sure to MAKE A COPY!\n */\nGuitarNote.DEFAULT_STATE = { active: false, ghosted: false, tonic: false };\n\nGuitarNote.prototype.notation = function(){\n    return this.note.notation();\n};\n\nGuitarNote.prototype.short = \nGuitarNote.prototype.simple = function(){\n    return this.note.simpleNotation();\n};\n\n\n/**\n * sets or gets the active state. \n * @returns true if the state is active\n */\nGuitarNote.prototype.active = function( value ){\n    if( typeof value != 'undefined'){\n        this.state.active = value;\n        return this.state.active;\n    } else {\n        return this.state.active;\n    }\n};\n\n/**\n * sets or gets the tonic state. \n * @returns true if the state is tonic\n */\nGuitarNote.prototype.tonic = function( value ){\n    if( typeof value != 'undefined'){\n        this.state.tonic = value;\n        return this.state.tonic;\n    } else {\n        return this.state.tonic;\n    }\n};\n\n/**\n * sets or gets the active state. \n * @returns true if the state is active\n */\nGuitarNote.prototype.ghosted = function( value ){\n    if( typeof value != 'undefined'){\n        this.state.ghosted = value;\n        return this.state.ghosted;\n    } else {\n        return this.state.ghosted;\n    }\n};\n\n/**\n * sets this note as the only active note on the string\n */\nGuitarNote.prototype.onlyActive = function( value ){\n    return this.guitarString.onlyActive( this.pos[1], value );\n}\n\n/**\n * get a string representation of the class\n */\nGuitarNote.prototype.class = function(){\n   var ret = [];\n   if( this.state.active ) ret.push('active');\n   if( this.state.ghosted ) ret.push('ghosted');\n   if( this.state.tonic ) ret.push('tonic');\n   return ret.join(' ');\n};\n\n/**\n * get the int note position\n */\nGuitarNote.prototype.notePos = function(){\n    return this.note.pos;\n}\n\n/**\n * get the relative note position\n */\nGuitarNote.prototype.relativeNotePos = function(){\n    return this.note.toRelative().pos;\n}\n\n"]],"start1":0,"start2":0,"length1":0,"length2":2896}]],"length":2896}
{"contributors":[],"silentsave":false,"ts":1360904110991,"patch":[[{"diffs":[[0,"n(' ');\n};\n\n"],[1,"/**\n * the interval to the tonic\n * \n * @returns an Interval object relative to the tonic\n */\nGuitarNote.prototype.intervalToTonic( tonic ){\n    this.note.interval( tonic );\n}\n\n"],[0,"/**\n * get t"]],"start1":2640,"start2":2640,"length1":24,"length2":201}]],"length":3073,"saved":false}
{"ts":1360904216959,"patch":[[{"diffs":[[0,"onic');\n"],[1,"   \n   // add the interval to the tonic as well\n   \n"],[0,"   retur"]],"start1":2615,"start2":2615,"length1":16,"length2":68}]],"length":3125,"saved":false}
{"ts":1360904361057,"patch":[[{"diffs":[[0," = function("],[1," tonic "],[0,"){\n   var re"]],"start1":2450,"start2":2450,"length1":24,"length2":31},{"diffs":[[0,"as well\n"],[1,"   if( tonic ) ret.push(this.intervalToTonic(tonic));\n"],[0,"   \n   r"]],"start1":2670,"start2":2670,"length1":16,"length2":70}]],"length":3186,"saved":false}
{"ts":1360904766362,"patch":[[{"diffs":[[0,"onic ){\n    "],[1,"return "],[0,"this.note.in"]],"start1":2898,"start2":2898,"length1":24,"length2":31}]],"length":3193,"saved":false}
{"ts":1360904773798,"patch":[[{"diffs":[[0,"lToTonic"],[1," = function"],[0,"( tonic "]],"start1":2887,"start2":2887,"length1":16,"length2":27}]],"length":3204,"saved":false}
{"ts":1360904872698,"patch":[[{"diffs":[[0,"c(tonic)"],[1,".name()"],[0,");\n   \n "]],"start1":2721,"start2":2721,"length1":16,"length2":23}]],"length":3211,"saved":false}
{"ts":1360927149926,"patch":[[{"diffs":[[0,").name()"],[1,".replace(\" \",\"-\")"],[0,");\n   \n "]],"start1":2728,"start2":2728,"length1":16,"length2":33}]],"length":3228,"saved":false}
{"ts":1360929141776,"patch":[[{"diffs":[[0,"return t"],[-1,"his.note"],[1,"onic"],[0,".interva"]],"start1":2945,"start2":2945,"length1":24,"length2":20},{"diffs":[[0,"erval( t"],[-1,"onic"],[1,"his.note"],[0," );\n}\n\n/"]],"start1":2961,"start2":2961,"length1":20,"length2":24}]],"length":3228,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360932992196,"patch":[[{"diffs":[[0,"n( tonic ){\n"],[1,"    if( tonic )\n    "],[0,"    return t"]],"start1":2929,"start2":2929,"length1":24,"length2":44}]],"length":3248,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361065896629,"patch":[[{"diffs":[[0,"ative().pos;\n}\n\n"],[1,"/**\n * get the 'distance' of a fret to another note on the fretboard\n * returns an array [ strings, frets ]\n */\nGuitarNote.prototype.distanceTo( otherNote ){\n    return [ Math.abs( otherNote.pos[0] - this.pos[0]), Math.abs( otherNote.pos[1] - this.pos[1]) ];\n}\n"]],"start1":3232,"start2":3232,"length1":16,"length2":277}]],"length":3509,"saved":false}
{"ts":1361065945698,"patch":[[{"diffs":[[0,"return ["],[-1," Math.abs("],[0," otherNo"]],"start1":3410,"start2":3410,"length1":26,"length2":16},{"diffs":[[0,"s[0]"],[-1,")"],[0,","],[-1," Math.abs("],[0," oth"]],"start1":3445,"start2":3445,"length1":20,"length2":9},{"diffs":[[0,"s.pos[1]"],[-1,")"],[0," ];\n}\n"]],"start1":3473,"start2":3473,"length1":15,"length2":14}]],"length":3487,"saved":false}
{"ts":1361066960642,"patch":[[{"diffs":[[0,"te position\n */\n"],[1,"GuitarNote.prototype.relPos =\n"],[0,"GuitarNote.proto"]],"start1":3139,"start2":3139,"length1":32,"length2":62}]],"length":3517,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361069332001,"patch":[[{"diffs":[[0,"stanceTo"],[1," = function"],[0,"( otherN"]],"start1":3413,"start2":3413,"length1":16,"length2":27}]],"length":3528,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361321153264,"patch":[[{"diffs":[[0,"mple = function("],[1," signature "],[0,"){\n    return th"]],"start1":1240,"start2":1240,"length1":32,"length2":43},{"diffs":[[0,"pleNotation("],[1," signature "],[0,");\n};\n\n\n/**\n"]],"start1":1294,"start2":1294,"length1":24,"length2":35}]],"length":3550,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362586990087,"patch":[[{"diffs":[[0,"pe.class"],[1,"Name"],[0," = funct"]],"start1":2464,"start2":2464,"length1":16,"length2":20}]],"length":3554,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363909319838,"patch":[[{"diffs":[[0," guitar "],[-1,":"],[1,"-"],[0," a Guita"]],"start1":45,"start2":45,"length1":17,"length2":17},{"diffs":[[0,"rString "],[-1,":"],[1,"-"],[0," a Guita"]],"start1":107,"start2":107,"length1":17,"length2":17},{"diffs":[[0,"am fret "],[-1,":"],[1,"-"],[0," the Gui"]],"start1":167,"start2":167,"length1":17,"length2":17},{"diffs":[[0,"ram pos "],[-1,":"],[1,"-"],[0," the pos"]],"start1":219,"start2":219,"length1":17,"length2":17},{"diffs":[[0,"        "],[-1,"{"],[0,"   activ"]],"start1":349,"start2":349,"length1":17,"length2":16},{"diffs":[[0,": false\n"],[1,""],[0," *      "]],"start1":452,"start2":452,"length1":16,"length2":16},{"diffs":[[0,"        "],[-1,"}"],[0,"\n */\nvar"]],"start1":476,"start2":476,"length1":17,"length2":16}]],"length":3552,"saved":false}
{"ts":1363909343167,"patch":[[{"diffs":[[0,"m state "],[-1,":"],[1,"-"],[0," an obje"]],"start1":277,"start2":277,"length1":17,"length2":17}]],"length":3552,"saved":false}
{"ts":1363909369907,"patch":[[{"diffs":[[0,": false };\n\n"],[1,"/**\n * get the notation\n */\n"],[0,"GuitarNote.p"]],"start1":1092,"start2":1092,"length1":24,"length2":52}]],"length":3580,"saved":false}
{"ts":1363909387036,"patch":[[{"diffs":[[0," object\n"],[1," * \n * @constructor\n * \n"],[0," * @para"]],"start1":28,"start2":28,"length1":16,"length2":40},{"diffs":[[0,"();\n};\n\n"],[1,"/**\n * get the short notation\n */\n"],[0,"GuitarNo"]],"start1":1229,"start2":1229,"length1":16,"length2":50}]],"length":3638,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363961726359,"patch":[[{"diffs":[[0," short notation\n"],[1," * \n * @param signature {integer}\n"],[0," */\nGuitarNote.p"]],"start1":1251,"start2":1251,"length1":32,"length2":66},{"diffs":[[0," active state. \n"],[1," * \n * @param active {string|boolean} \n"],[0," * @returns true"]],"start1":1466,"start2":1466,"length1":32,"length2":71},{"diffs":[[0,"e tonic state. \n"],[1," * \n * @param value {Note} - a Note object\n"],[0," * @returns true"]],"start1":1800,"start2":1800,"length1":32,"length2":75}]],"length":3754,"saved":false}
{"ts":1363961865502,"patch":[[{"diffs":[[0,"state. \n"],[1," * \n * @param value {boolean} - \n"],[0," * @retu"]],"start1":2142,"start2":2142,"length1":16,"length2":49}]],"length":3787,"saved":false}
{"ts":1363962447187,"patch":[[{"diffs":[[0,"active )"],[1," "],[0," ret.pus"]],"start1":2766,"start2":2766,"length1":16,"length2":17},{"diffs":[[0,"tate.tonic )"],[1,"  "],[0," ret.push('t"]],"start1":2858,"start2":2858,"length1":24,"length2":26}]],"length":3790,"saved":false}
{"ts":1363962490896,"patch":[[{"diffs":[[0,"e class\n"],[1," * \n * @param {Note} [tonic] optionally specify a tonic. If so, the interval to the tonic is added as well\n"],[0," */\nGuit"]],"start1":2667,"start2":2667,"length1":16,"length2":123}]],"length":3897,"saved":false}
{"ts":1363962511857,"patch":[[{"diffs":[[0,"e tonic\n * \n"],[1," * @tonic {Note} - A Note object representing the tonic\n * \n"],[0," * @returns "]],"start1":3183,"start2":3183,"length1":24,"length2":84}]],"length":3957,"saved":false}
{"ts":1363962558586,"patch":[[{"diffs":[[0,"t note position\n"],[1," * \n * @returns {integer} - the MIDI position of the note\n"],[0," */\n"],[-1,""],[0,"GuitarNote.proto"]],"start1":3450,"start2":3450,"length1":36,"length2":94},{"diffs":[[0,"te position\n"],[1," * \n * @returns {integer} - the relative position of the note\n"],[0," */\nGuitarNo"]],"start1":3626,"start2":3626,"length1":24,"length2":86},{"diffs":[[0,"oard\n * "],[1,"@"],[0,"returns"],[1," {array} -"],[0," an arra"]],"start1":3891,"start2":3891,"length1":23,"length2":34},{"diffs":[[0,"frets ]\n"],[1," * \n"],[0," */\nGuit"]],"start1":3938,"start2":3938,"length1":16,"length2":20}]],"length":4092,"saved":false}
{"ts":1363962598860,"patch":[[{"diffs":[[0," string\n"],[1," * \n * @param {boolean} value - \n"],[0," */\nGuit"]],"start1":2496,"start2":2496,"length1":16,"length2":49},{"diffs":[[0,"is.note );\n}"],[1,";"],[0,"\n"],[-1,""],[0,"\n/**\n * get "]],"start1":3452,"start2":3452,"length1":25,"length2":26},{"diffs":[[0,".note.pos;\n}"],[1,";"],[0,"\n\n/**\n * get"]],"start1":3620,"start2":3620,"length1":24,"length2":25},{"diffs":[[0,").pos;\n}"],[1,";"],[0,"\n\n/**\n *"]],"start1":3852,"start2":3852,"length1":16,"length2":17},{"diffs":[[0,"s[1] ];\n"],[-1,""],[0,"}"],[1,";"],[0,"\n"]],"start1":4118,"start2":4118,"length1":10,"length2":11}]],"length":4129,"saved":false}
{"ts":1363962634496,"patch":[[{"diffs":[[0,"* \n * @param"],[1," {Guitar}"],[0," guitar - a "]],"start1":57,"start2":57,"length1":24,"length2":33},{"diffs":[[0,"* @param"],[1," {GuitarString}"],[0," guitarS"]],"start1":126,"start2":126,"length1":16,"length2":31},{"diffs":[[0,"* @param"],[1," {GtarFret}"],[0," fret - "]],"start1":209,"start2":209,"length1":16,"length2":27},{"diffs":[[0,"* @param"],[1," {array}"],[0," pos - t"]],"start1":273,"start2":273,"length1":16,"length2":24},{"diffs":[[0,"* @param"],[1," {object}"],[0," state -"]],"start1":337,"start2":337,"length1":16,"length2":25}]],"length":4181,"saved":false}
{"ts":1363962733944,"patch":[[{"diffs":[[0,"* @param"],[1," {integer}"],[0," signatu"]],"start1":1324,"start2":1324,"length1":16,"length2":26},{"diffs":[[0,"gnature "],[-1,"{integer}"],[0,"\n */\nGui"]],"start1":1345,"start2":1345,"length1":25,"length2":16},{"diffs":[[0," @param "],[-1,"active "],[0,"{string|"]],"start1":1541,"start2":1541,"length1":23,"length2":16},{"diffs":[[0,"oolean} "],[1,"active "],[0,"\n * @ret"]],"start1":1558,"start2":1558,"length1":16,"length2":23},{"diffs":[[0,"ive \n * @returns"],[1," {boolean}"],[0," true if the sta"]],"start1":1569,"start2":1569,"length1":32,"length2":42},{"diffs":[[0,"ram "],[-1,"value "],[0,"{Note}"],[1," value"],[0," - a"]],"start1":1889,"start2":1889,"length1":20,"length2":20},{"diffs":[[0,"ject\n * @returns"],[1," {boolean}"],[0," true if the sta"]],"start1":1917,"start2":1917,"length1":32,"length2":42},{"diffs":[[0," @param "],[-1,"value "],[0,"{boolean"]],"start1":2229,"start2":2229,"length1":22,"length2":16},{"diffs":[[0,"oolean} "],[-1,"- "],[1,"value"],[0,"\n * @ret"]],"start1":2239,"start2":2239,"length1":18,"length2":21},{"diffs":[[0,"@returns"],[1," {boolean}"],[0," true if"]],"start1":2256,"start2":2256,"length1":16,"length2":26},{"diffs":[[0,"alue - \n"],[1," * @returns {boolean} \n"],[0," */\nGuit"]],"start1":2609,"start2":2609,"length1":16,"length2":39},{"diffs":[[0,"as well\n"],[1," * @returns {string} \n"],[0," */\nGuit"]],"start1":2910,"start2":2910,"length1":16,"length2":38},{"diffs":[[0," * @"],[-1,"tonic"],[1,"param"],[0," {Note}"],[1," tonic"],[0," - A"]],"start1":3353,"start2":3353,"length1":20,"length2":26},{"diffs":[[0,"@returns"],[1," {Interval}"],[0," an Inte"]],"start1":3422,"start2":3422,"length1":16,"length2":27}]],"length":4271,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363966674247,"patch":[[{"diffs":[[0,"otation\n"],[1," * \n * @returns {string} the notation\n"],[0," */\n"],[-1,""],[0,"GuitarNo"]],"start1":1196,"start2":1196,"length1":20,"length2":58},{"diffs":[[0,"nature \n"],[1," * \n * @returns {string} the Chord notation\n"],[0," */\nGuit"]],"start1":1384,"start2":1384,"length1":16,"length2":60},{"diffs":[[0,"am {"],[-1,"string|"],[0,"bool"]],"start1":1628,"start2":1628,"length1":15,"length2":8},{"diffs":[[0,"oolean} "],[-1,"activ"],[1,"valu"],[0,"e \n * @r"]],"start1":1633,"start2":1633,"length1":21,"length2":20},{"diffs":[[0,"lue );\n}"],[1,";"],[0,"\n\n/**\n *"]],"start1":2827,"start2":2827,"length1":16,"length2":17}]],"length":4346,"saved":false}
{"ts":1363966687569,"patch":[[{"diffs":[[0,"ns {integer}"],[-1," -"],[0," the MIDI po"]],"start1":3730,"start2":3730,"length1":26,"length2":24},{"diffs":[[0,"integer}"],[-1," -"],[0," the rel"]],"start1":3905,"start2":3905,"length1":18,"length2":16},{"diffs":[[0," {array}"],[-1," -"],[0," an arra"]],"start1":4156,"start2":4156,"length1":18,"length2":16}]],"length":4340,"saved":false}
{"ts":1363966692475,"patch":[[{"diffs":[[0,"n array "],[1,"with 2 elements "],[0,"[ string"]],"start1":4166,"start2":4166,"length1":16,"length2":32}]],"length":4356,"saved":false}
{"ts":1363966956219,"patch":[[{"diffs":[[0," object\n * \n"],[1," * @namespace Guitar\n * \n"],[0," * @construc"]],"start1":28,"start2":28,"length1":24,"length2":49}]],"length":4381,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363967238287,"patch":[[{"diffs":[[0," \n    /*"],[-1,"*"],[0,"\n     * "]],"start1":873,"start2":873,"length1":17,"length2":16}]],"length":4380,"saved":false}
{"ts":1363967366709,"patch":[[{"diffs":[[0,"mespace "],[-1,"G"],[1,"g"],[0,"uitar"],[1,".note"],[0,"\n * \n * "]],"start1":46,"start2":46,"length1":22,"length2":27}]],"length":4385,"saved":false}
