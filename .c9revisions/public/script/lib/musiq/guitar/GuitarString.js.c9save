{"ts":1361043434890,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/** \n * guitar string class\n * @param guitar : the Guitar object this String belongs to\n * @param base : the base note position of this string\n * @param pos : the position of the string relative to the other strings\n */\n\nvar GuitarString = function( guitar, pos, base ){\n    \n    this.guitar = guitar;\n    this.pos = pos;\n    this.base = base;\n    \n};\n\n\n/**\n * return a Note object for a fret position on this string\n * \n * @param fret : a GuitarFret object we should check the note on\n */\nGuitarString.prototype.noteOnFret = function( fret ){\n    return;\n};\n\n/**\n * get a list of integers that represents all active notes on this string\n */\nGuitarString.prototype.activeNotes = function( chord ){\n    return;\n};\n\nGuitarString.prototype.onlyActive = function( fret, value ){\n    \n    _(this.guitar.notes[this.pos]).each(function(note, key){\n        if( key == fret )\n            note.active(value);\n        else\n            note.active(false);\n            \n    },this);\n        \n};"]],"start1":0,"start2":0,"length1":0,"length2":981}]],"length":981}
{"contributors":[],"silentsave":false,"ts":1361043527513,"patch":[[{"diffs":[[0,"  return"],[1," this.guitar[this.pos][fret.pos]"],[0,";\n};\n\n"],[1,"\n\n"],[0,"/**\n * g"]],"start1":546,"start2":546,"length1":22,"length2":56}]],"length":1015,"saved":false}
{"ts":1361043614332,"patch":[[{"diffs":[[0,"s];\n};\n\n"],[1,"/**\n * matches a Note object to the fret and returns all GuitarNote objects that\n * match it.\n */\nGuitarString.prototype.matchNotes ( note ){\n    \n}"],[0,"\n\n/**\n *"]],"start1":584,"start2":584,"length1":16,"length2":164}]],"length":1163,"saved":false}
{"ts":1361043616561,"patch":[[{"diffs":[[0,"chNotes "],[1,"= function"],[0,"( note )"]],"start1":716,"start2":716,"length1":16,"length2":26}]],"length":1173,"saved":false}
{"ts":1361043620247,"patch":[[{"diffs":[[0,"{\n    \n}"],[1,";"],[0,"\n\n/**\n *"]],"start1":742,"start2":742,"length1":16,"length2":17}]],"length":1174,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363909394169,"patch":[[{"diffs":[[0,"g class\n"],[1," * \n * @constructor\n * \n"],[0," * @para"]],"start1":20,"start2":20,"length1":16,"length2":40}]],"length":1198,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363966887176,"patch":[[{"diffs":[[0,"aram"],[1," {Guitar}"],[0," guitar "],[-1,":"],[1,"-"],[0," the"]],"start1":57,"start2":57,"length1":17,"length2":26},{"diffs":[[0,"aram"],[1," {integer}"],[0," base "],[-1,":"],[1,"-"],[0," the"]],"start1":126,"start2":126,"length1":15,"length2":25},{"diffs":[[0,"aram"],[1," {integer}"],[0," pos "],[-1,":"],[1,"-"],[0," the"]],"start1":191,"start2":191,"length1":14,"length2":24},{"diffs":[[0,"aram"],[1," {GuitarFret}"],[0," fret "],[-1,":"],[1,"-"],[0," a G"]],"start1":479,"start2":479,"length1":15,"length2":28},{"diffs":[[0,"tch it.\n"],[1," * \n * @param {Note} note - a Note object\n * @todo implement function\n"],[0," */\nGuit"]],"start1":744,"start2":744,"length1":16,"length2":86},{"diffs":[[0," string\n"],[1," * \n * @todo implement function\n"],[0," */\nGuit"]],"start1":959,"start2":959,"length1":16,"length2":48},{"diffs":[[0,"rn;\n};\n\n"],[1,"/**\n * set the note on the specified fret as the only active note on this string\n * \n * @param {integer} fret - integer representing the fret position\n * @param {boolean} value - true if the GuitarNote should be set to active\n */\n"],[0,"GuitarSt"]],"start1":1067,"start2":1067,"length1":16,"length2":246}]],"length":1572,"saved":false}
{"ts":1363966918908,"patch":[[{"diffs":[[0,"g class\n * \n"],[1," * @namespace Guitar\n * \n"],[0," * @construc"]],"start1":20,"start2":20,"length1":24,"length2":49}]],"length":1597,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363967372732,"patch":[[{"diffs":[[0,"mespace "],[-1,"G"],[1,"g"],[0,"uitar"],[1,".string"],[0,"\n * \n * "]],"start1":38,"start2":38,"length1":22,"length2":29}]],"length":1604,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363985102813,"patch":[[{"diffs":[[0," * \n"],[-1," * @namespace guitar.string\n"],[0," * \n"]],"start1":28,"start2":28,"length1":36,"length2":8},{"diffs":[[0," string\n * \n"],[1," * @returns {integer[]}\n * \n"],[0," * @todo imp"]],"start1":963,"start2":963,"length1":24,"length2":52},{"diffs":[[0,"lement function\n"],[-1,""],[0," */\nGuitarString"]],"start1":1015,"start2":1015,"length1":32,"length2":32},{"diffs":[[0," active\n"],[1," * \n * @returns {GuitarString}\n"],[0," */\nGuit"]],"start1":1325,"start2":1325,"length1":16,"length2":47},{"diffs":[[0,"s);\n    "],[-1,"    "],[1,"\n    return this;"],[0,"\n};"]],"start1":1620,"start2":1620,"length1":15,"length2":28}]],"length":1648,"saved":false}
{"ts":1363985111018,"patch":[[{"diffs":[[0,"rString}"],[1," - return this GuitarString"],[0,"\n */\nGui"]],"start1":1355,"start2":1355,"length1":16,"length2":43}]],"length":1675,"saved":false}
