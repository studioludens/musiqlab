{"ts":1360857549608,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Test script\n\n\n// EXECUTE test scripts\n//test_Notes();\n//test_Chords();\ntest_Guitar();\n\n\nfunction test_Notes() {\n    var c = Note.fromNotation(\"C0\");\n    var d = Note.fromNotation(\"D1\");\n    var e = Note.fromNotation(\"E2\");\n    var f = Note.fromNotation(\"F3\");\n    \n    var fsharp = Note.fromNotation(\"F#6\");\n\n    console.log(\"C:\");\n    var simplec = Note.fromNotation(\"C\");\n    \n    \n    var simple_fsharp = Note.fromNotation(\"F#\");\n    \n    var cflat = Note.fromNotation(\"Cb3\");\n    \n    // this should result in ERRORS:\n    console.log(\"Four failing assertions: \");\n    console.log(Note.fromNotation(\"Bleg\"));\n    console.log(Note.fromNotation(\"Cf\"));\n    console.log(Note.fromNotation(\"H\"));\n    console.log(Note.fromNotation(\"C-\"));\n    \n    // this should be fine:\n    console.log(\"No errors: \");\n    \n    console.log(\"B\");\n    console.log(Note.fromNotation(\"B\"));\n    \n    console.log(\"Gb\");\n    console.log(Note.fromNotation(\"Gb\"));\n    console.log(\"Dbbb (D triple flat)\");\n    console.log(Note.fromNotation(\"Dbbb\"));\n    console.log(\"Fx (double sharp)\");\n    console.log(Note.fromNotation(\"Fx\"));\n    console.log(\"Fx (double sharp, octave 2)\");\n    console.log(Note.fromNotation(\"Fx1\"));\n    \n\n    // check note positions\n    console.log( Note.fromNotation(\"Cb1\").pos);\n    console.assert( Note.fromNotation(\"Cb1\").pos == 11);\n    console.assert( Note.fromNotation(\"B#\").pos == 12);\n\n    // log some distances\n    console.assert(c.distance(d) == 14);\n    console.assert(c.relativeDistance(d) == 2);\n\n    // and the other way around\n    console.assert(d.distance(c) == -14);\n    console.assert(d.relativeDistance(c) == 10);\n\n    // get the interval\n    console.assert(d.interval(c).name() == \"minor seventh\");\n\n    // get the signature\n    console.assert(d.signature() == 2);\n\n    // position on the circle of fifths\n    console.assert(c.cofPosition() == 0);\n\n    // notation\n\n    console.assert(fsharp.simpleNotation() == \"F#\");\n\n    // this fails!\n    //console.assert(cflat.simpleNotation() == \"Cb\");\n\n    // NOTE: this doesn't work!\n    //console.assert(Note.fromNotation(\"Fb\").simpleNotation() == \"Fb\");\n    \n    // test octave\n    console.log(\"Transposing C0 -> pos = \" + c.transpose('octave').pos)\n    console.assert(c.transpose('octave').pos == 12);\n    \n    console.assert(c.transpose(Interval.fromName('octave')).pos == 12);\n    \n}\n\n// CHORDS\n\nfunction test_Chords() {\n\n    var cmaj = Chord.fromNotation(\"C\");\n\n\n    // chord from notation\n    var dmaj7 = Chord.fromNotation(\"Dmaj7\");\n\n    // transpose it a bit\n    dmaj7.tonic = Note.fromNotation(\"D5\");\n    console.log( cmaj );\n    console.log( dmaj7.noteObjects());\n\n    //var fmaj7 = Chord.fromNotes( [0,4,7] );\n\n    /*\n    var chords1 = Chord.fromNotes( [0,4,7] );\n    var chords2 = Chord.fromNotes( [1,5,8] );\n    \n    var chords3 = Chord.fromNotes( [12,15,19,24] );\n    */\n    var chords4 = Chord.fromNotes( [ 0, 4, 7, 11, 14 ] );\n    var chords5 = Chord.fromNotes( [ 0, 4, 7, 11, 14 ] );\n    \n    /*\n    _.each(chords1, function(chord){ console.log(chord.notation()); });\n    _.each(chords2, function(chord){ console.log(chord.notation()); });\n    _.each(chords3, function(chord){ console.log(chord.notation()); });\n    */\n    _.each(chords4, function(chord){ console.log(chord.notation()); });\n    _.each(chords5, function(chord){ console.log(chord.notation()); });\n    \n    \n    /*console.log(chord2.notation());\n    console.log(chord3.notation());\n    */\n    console.log(chords4.notation());\n    console.log(chords5.notation());\n    \n}\n\nfunction test_Guitar() {\n    /* GUITAR TESTS */\n    var guitar = new Guitar();\n    \n    /* NOTES ON GUITAR */\n    //console.log(guitar.notes[0][0].note.notation());\n    console.assert(guitar.strings[1].base == 45);\n    \n    console.assert(guitar.notes[0][0].note.notation() == \"E3\");\n    console.assert(guitar.notationFor( 1, 3 ) == \"C\");\n    \n    /* NOTES ON SPECIFIC FRET */\n    console.log(guitar.notesOnFret(1));\n    console.assert(guitar.notesOnFret(1)[0].notation() == \"F3\");\n    \n    /* MAJOR CHORDS */\n\n    // F\n    console.info(\"Looking for F ( 1 3 3 2 1 1 )\");\n    var Fmaj = guitar.chordsFromFingerPos([1, 3, 3, 2, 1, 1]);\n    _.each(Fmaj, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Fmaj[0].notation() == \"F\");\n\n    // C\n    console.info(\"Looking for C ( x 3 5 5 5 3 )\");\n    var Cmaj = guitar.chordsFromFingerPos([-1, 3, 5, 5, 5, 3]);\n    _.each(Cmaj, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Cmaj[0].notation() == \"C\");\n\n    // another C\n    console.info(\"Looking for C ( x 3 2 0 1 0 )\");\n    var Cmaj = guitar.chordsFromFingerPos([-1, 3, 2, 0, 1, 0]);\n    _.each(Cmaj, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Cmaj[0].notation() == \"C\");\n\n\n    /* MINOR CHORDS */\n\n    // let's plan an E minor on the guitar!\n    console.info(\"Looking for Em ( 0 2 2 0 0 0 )\");\n    var emin = guitar.chordsFromFingerPos([0, 2, 2, 0, 0, 0]);\n    _.each(emin, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(emin[0].notation() == \"Em\");\n\n    // an an e minor power chord\n    console.info(\"Looking for Em\");\n    var eminp = guitar.chordsFromFingerPos([0, 2, 2, - 1, - 1, - 1]);\n    _.each(eminp, function(chord) {\n        console.log(chord.notation());\n    });\n    //console.assert( emin[0].notation() == \"Em\");\n\n    /* DIMINISHED TRIADS */\n\n    /* AUGMENTED TRIADS */\n\n    /* SEVENTH (7th) CHORDS */\n\n    // and a G minor 7!\n    console.warn(\"Looking for Gm7 (3, 5, 3, 3, 3, 3)\");\n    var gm7 = guitar.chordsFromFingerPos([3, 5, 3, 3, 3, 3]);\n    _.each(gm7, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(gm7[0].notation() == \"Gm7\");\n\n    // A7\n    console.log(\"Looking for A7 (5, 7, 5, 6, 5, 5)\");\n    var A7 = guitar.chordsFromFingerPos([5, 7, 5, 6, 5, 5]);\n    _.each(A7, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(A7[0].notation() == \"A7\");\n\n    // A7\n    console.log(\"Looking for A7 (x 0 2 0 2 0)\");\n    var A72 = guitar.chordsFromFingerPos([-1, 0, 2, 0, 2, 0]);\n    _.each(A72, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(A72[0].notation() == \"A7\");\n\n    // A7\n    console.log(\"Looking for A7 (5 x 5 6 5 x)\");\n    var A73 = guitar.chordsFromFingerPos([5, - 1, 5, 6, 5, - 1]);\n    _.each(A73, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(A73[0].notation() == \"A7\");\n\n    // Bm7b5\n    console.log(\"Looking for Bm7b5 ( x 2 3 2 3 x )\");\n    var Bm7b5 = guitar.chordsFromFingerPos([-1, 2, 3, 2, 3, - 1]);\n    _.each(Bm7b5, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Bm7b5[0].notation() == \"Bm7b5\");\n\n    // Bdim7\n    console.log(\"Looking for Bdim ( x 2 3 1 3 x )\");\n    var Bdim = guitar.chordsFromFingerPos([-1, 2, 3, 1, 3, - 1]);\n    _.each(Bdim, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Bdim[0].notation() == \"Bdim7\");\n\n    // Gmaj7\n    console.log(\"Looking for Gmaj7 ( 3 x 4 4 3 )\");\n    var Gmaj7 = guitar.chordsFromFingerPos([3, - 1, 4, 4, 3, - 1]);\n    _.each(Gmaj7, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Gmaj7[0].notation() == \"Gmaj7\");\n\n    /* NINTH (9th) CHORDS */\n\n    // C#9\n    console.log(\"Looking for C#9\");\n    var Cis9 = guitar.chordsFromFingerPos([-1, 4, 3, 4, 4, - 1]);\n    _.each(Cis9, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Cis9[0].notation() == \"C#9\");\n\n    /* SIX CHORDS */\n\n    // Am6\n    console.log(\"Looking for Am6\");\n    var Am6 = guitar.chordsFromFingerPos([5, - 1, 4, 5, 5, - 1]);\n    _.each(Am6, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Am6[0].notation() == \"Am6\");\n\n    // C6/9\n    console.log(\"Looking for C6/9\");\n    var C69 = guitar.chordsFromFingerPos([3, 3, 2, 2, 3, 3]);\n    _.each(C69, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(C69[0].notation() == \"C6/9\");\n\n    /* ELEVENTH CHORDS */\n\n    // Cm11\n    console.log(\"Looking for Cm11\");\n    var Cm11 = guitar.chordsFromFingerPos([8, - 1, 8, 8, 6, - 1]);\n    _.each(Cm11, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Cm11[0].notation() == \"Cm11\");\n\n    /* THIRTEENTH CHORDS */\n    // G13\n    console.log(\"Looking for G13\");\n    var G13 = guitar.chordsFromFingerPos([3, - 1, 3, 4, 5, - 1]);\n    _.each(G13, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(G13[0].notation() == \"G13\");\n\n    // G b13\n    console.log(\"Looking for G b13\");\n    var Gb13 = guitar.chordsFromFingerPos([3, - 1, 3, 4, 4, - 1]);\n    _.each(Gb13, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Gb13[0].notation() == \"G b13\");\n\n}\n\n"]],"start1":0,"start2":0,"length1":0,"length2":8893}]],"length":8893}
{"contributors":[],"silentsave":false,"ts":1360857596442,"patch":[[{"diffs":[[0,"G b13\");"],[1,"\n    \n    "],[0,"\n\n}\n\n"]],"start1":8880,"start2":8880,"length1":13,"length2":23}]],"length":8903,"saved":false}
{"ts":1360857640235,"patch":[[{"diffs":[[0,"ation(\"C\");\n"],[1,"    console.assert( cmaj.tonic.relative == true);\n"],[0,"\n\n    // cho"]],"start1":2418,"start2":2418,"length1":24,"length2":74},{"diffs":[[0,");\n    \n"],[1,"    // \n"],[0,"}\n\nfunct"]],"start1":3556,"start2":3556,"length1":16,"length2":24}]],"length":8961,"saved":false}
{"ts":1360857650120,"patch":[[{"diffs":[[0,"ation(\"C\");\n"],[1,"    \n    // check if the tonic is relative\n"],[0,"    console."]],"start1":2418,"start2":2418,"length1":24,"length2":67}]],"length":9004,"saved":false}
{"ts":1360857657516,"patch":[[{"diffs":[[0,"otes();\n"],[-1,"//"],[0,"test_Cho"]],"start1":49,"start2":49,"length1":18,"length2":16},{"diffs":[[0,"t_Chords();\n"],[1,"//"],[0,"test_Guitar("]],"start1":60,"start2":60,"length1":24,"length2":26}]],"length":9004,"saved":false}
{"ts":1360857789761,"patch":[[{"diffs":[[0,"rt( cmaj"],[1,"[0]"],[0,".tonic.r"]],"start1":2489,"start2":2489,"length1":16,"length2":19}]],"length":9007,"saved":false}
{"ts":1360857840879,"patch":[[{"diffs":[[0,"(\"C\");\n    \n"],[1,"    console.log( cmaj );\n"],[0,"    // check"]],"start1":2423,"start2":2423,"length1":24,"length2":49},{"diffs":[[0,"\");\n    "],[-1,"console.log( cmaj );"],[0,"\n    con"]],"start1":2691,"start2":2691,"length1":36,"length2":16}]],"length":9012,"saved":false}
{"ts":1360858000847,"patch":[[{"diffs":[[0,"rt( cmaj"],[-1,"[0]"],[0,".tonic.r"]],"start1":2514,"start2":2514,"length1":19,"length2":16}]],"length":9009,"saved":false}
{"ts":1360858043739,"patch":[[{"diffs":[[0,"elative\n"],[1,"    console.assert( cmaj.tonic.pos == 0);\n"],[0,"    cons"]],"start1":2490,"start2":2490,"length1":16,"length2":58}]],"length":9051,"saved":false}
{"ts":1360858095443,"patch":[[{"diffs":[[0,"(chords4"],[1,"[0]"],[0,".notatio"]],"start1":3590,"start2":3590,"length1":16,"length2":19},{"diffs":[[0,"(chords5"],[1,"[0]"],[0,".notatio"]],"start1":3630,"start2":3630,"length1":16,"length2":19}]],"length":9057,"saved":false}
{"ts":1360858107462,"patch":[[{"diffs":[[0,"\n   "],[-1," \n    /*console.log(chord2.notation());\n    console.log(chord3.notation());\n    */\n    console.log(chords4[0].notation());\n    console.log(chords5[0].notation());\n    \n    // "],[0,"\n}\n\n"]],"start1":3488,"start2":3488,"length1":183,"length2":8}]],"length":8882,"saved":false}
{"ts":1360863274539,"patch":[[{"diffs":[[0," == true);\n\n"],[1,"    /*"],[0,"\n    // chor"]],"start1":2579,"start2":2579,"length1":24,"length2":30},{"diffs":[[0,")); });\n    "],[-1,"*/"],[0,"\n    _.each("]],"start1":3331,"start2":3331,"length1":26,"length2":24},{"diffs":[[0,")); });\n    "],[1,"*/"],[0,"\n   \n}\n\nfunc"]],"start1":3480,"start2":3480,"length1":24,"length2":26}]],"length":8888,"saved":false}
{"ts":1360863279215,"patch":[[{"diffs":[[0,"\n    */\n    "],[1,"//"],[0,"var chords4 "]],"start1":2987,"start2":2987,"length1":24,"length2":26},{"diffs":[[0,"11, 14 ] );\n    "],[1,"//"],[0,"var chords5 = Ch"]],"start1":3043,"start2":3043,"length1":32,"length2":34}]],"length":8892,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360865033295,"patch":[[{"diffs":[[0,"scripts\n"],[-1,"//"],[0,"test_Not"]],"start1":33,"start2":33,"length1":18,"length2":16},{"diffs":[[0,"otes();\n"],[1,""],[0,"test_Cho"]],"start1":47,"start2":47,"length1":16,"length2":16},{"diffs":[[0,"t_Notes() {\n"],[1,"    \n    // test notes with octave indication\n"],[0,"    var c = "]],"start1":101,"start2":101,"length1":24,"length2":70},{"diffs":[[0,"ion(\"F3\");\n    \n"],[1,"    // test sharp notes\n"],[0,"    var fsharp ="]],"start1":296,"start2":296,"length1":32,"length2":56},{"diffs":[[0,"    "],[-1,"console.log(\"C:\");"],[1,"// test simple notes"],[0,"\n   "]],"start1":380,"start2":380,"length1":26,"length2":28},{"diffs":[[0,"n(\"C\");\n"],[-1,"    \n    \n"],[0,"    var "]],"start1":439,"start2":439,"length1":26,"length2":16},{"diffs":[[0,"tion(\"F#\");\n"],[-1,"    \n"],[0,"    var cfla"]],"start1":484,"start2":484,"length1":29,"length2":24},{"diffs":[[0,");\n    \n"],[1,"    \n"],[0,"}\n\n// CH"]],"start1":2397,"start2":2397,"length1":16,"length2":21}]],"length":8952,"saved":false}
{"ts":1360865121569,"patch":[[{"diffs":[[0," in "],[-1,"ERRORS:"],[1,"warnings"],[0,"\n   "]],"start1":568,"start2":568,"length1":15,"length2":16}]],"length":8953,"saved":false}
{"ts":1360865132254,"patch":[[{"diffs":[[0,"our "],[-1,"failing assertions"],[1,"notes that can't be found"],[0,": \")"]],"start1":599,"start2":599,"length1":26,"length2":33}]],"length":8960,"saved":false}
{"ts":1360865260303,"patch":[[{"diffs":[[0,"    "],[-1,"var d = Note.fromNotation(\"D1\");\n    var e = Note.fromNotation(\"E2\");\n    var f = Note.fromNotation(\"F3\""],[1,"console.assert(c.relative == false);\n    \n    var d = Note.fromNotation(\"D1\");\n    console.assert(d.relative == false);\n    \n    var e = Note.fromNotation(\"E2\");\n    console.assert(e.relative == false);\n    \n    var f = Note.fromNotation(\"F3\");\n    console.assert(f.relative == false"],[0,");\n "]],"start1":196,"start2":196,"length1":112,"length2":291}]],"length":9139,"saved":false}
{"ts":1360865418890,"patch":[[{"diffs":[[0,"\");\n    console."],[-1,"log"],[1,"assert"],[0,"(Note.fromNotati"]],"start1":1070,"start2":1070,"length1":35,"length2":38},{"diffs":[[0,"ion(\"B\")"],[1,".pos == 11"],[0,");\n    \n"]],"start1":1107,"start2":1107,"length1":16,"length2":26},{"diffs":[[0,"\");\n    console."],[-1,"log"],[1,"assert"],[0,"(Note.fromNotati"]],"start1":1152,"start2":1152,"length1":35,"length2":38},{"diffs":[[0,"on(\"Gb\")"],[1,".pos == 6"],[0,");\n"],[1,"    \n"],[0,"    cons"]],"start1":1190,"start2":1190,"length1":19,"length2":33},{"diffs":[[0,"\");\n    console."],[-1,"log"],[1,"assert"],[0,"(Note.fromNotati"]],"start1":1252,"start2":1252,"length1":35,"length2":38},{"diffs":[[0,"(\"Dbbb\")"],[-1,");"],[1,".pos == -1);\n    "],[0,"\n    con"]],"start1":1292,"start2":1292,"length1":18,"length2":33},{"diffs":[[0,"\");\n    console."],[-1,"log"],[1,"assert"],[0,"(Note.fromNotati"]],"start1":1352,"start2":1352,"length1":35,"length2":38},{"diffs":[[0,"ion(\"Fx\"));\n"],[1,"    \n"],[0,"    console."]],"start1":1389,"start2":1389,"length1":24,"length2":29},{"diffs":[[0,"\");\n    console."],[-1,"log"],[1,"assert"],[0,"(Note.fromNotati"]],"start1":1450,"start2":1450,"length1":35,"length2":38}]],"length":9198,"saved":false}
{"ts":1360865514119,"patch":[[{"diffs":[[0,"on(\"Fx\")"],[-1,");"],[1,".pos == 7);\n    "],[0,"\n    \n  "]],"start1":1390,"start2":1390,"length1":18,"length2":32},{"diffs":[[0,"n(\"Fx1\")"],[1,".pos == 19"],[0,");\n    \n"]],"start1":1503,"start2":1503,"length1":16,"length2":26}]],"length":9222,"saved":false}
{"ts":1360865548282,"patch":[[{"diffs":[[0,"    console.log("],[1,"typeof "],[0,"Note.fromNotatio"]],"start1":813,"start2":813,"length1":32,"length2":39},{"diffs":[[0,"(\"Bleg\")"],[1," == 'undefined'"],[0,");\n    c"]],"start1":853,"start2":853,"length1":16,"length2":31},{"diffs":[[0,"    console.log("],[1,"typeof "],[0,"Note.fromNotatio"]],"start1":879,"start2":879,"length1":32,"length2":39},{"diffs":[[0,"on(\"Cf\")"],[1," == 'undefined'"],[0,");\n    c"]],"start1":917,"start2":917,"length1":16,"length2":31},{"diffs":[[0,"    console.log("],[1,"typeof "],[0,"Note.fromNotatio"]],"start1":943,"start2":943,"length1":32,"length2":39},{"diffs":[[0,"ion(\"H\")"],[1," == 'undefined'"],[0,");\n    c"]],"start1":980,"start2":980,"length1":16,"length2":31},{"diffs":[[0,"ole.log("],[1,"typeof "],[0,"Note.fro"]],"start1":1014,"start2":1014,"length1":16,"length2":23},{"diffs":[[0,"on(\"C-\")"],[1," == 'undefined'"],[0,");\n    \n"]],"start1":1044,"start2":1044,"length1":16,"length2":31}]],"length":9310,"saved":false}
{"ts":1360866099325,"patch":[[{"diffs":[[0,"    "],[-1,"var simple_fsharp = Note.fromNotation(\"F#\");\n    var cflat = Note.fromNotation(\"Cb3\""],[1,"console.assert(simplec.relative == true);\n    \n    var simple_fsharp = Note.fromNotation(\"F#\");\n    console.assert(simple_fsharp.relative == true);\n    \n    var cflat = Note.fromNotation(\"Cb3\");\n    console.assert(cflat.relative == true"],[0,");\n "]],"start1":626,"start2":626,"length1":92,"length2":244}]],"length":9462,"saved":false}
{"ts":1360866116471,"patch":[[{"diffs":[[0,"lat.relative == "],[-1,"tru"],[1,"fals"],[0,"e);\n    \n    // "]],"start1":846,"start2":846,"length1":35,"length2":36}]],"length":9463,"saved":false}
{"ts":1360866191760,"patch":[[{"diffs":[[0,"pos == 11);\n"],[1,"    \n    console.log( Note.fromNotation(\"B#\"));\n"],[0,"    console."]],"start1":1892,"start2":1892,"length1":24,"length2":72}]],"length":9511,"saved":false}
{"ts":1360866219947,"patch":[[{"diffs":[[0,".pos == "],[-1,"12"],[1,"0"],[0,");\n\n    "]],"start1":1995,"start2":1995,"length1":18,"length2":17}]],"length":9510,"saved":false}
{"ts":1360866221831,"patch":[[{"diffs":[[0,"= 11);\n    \n    "],[1,"//"],[0,"console.log( Not"]],"start1":1897,"start2":1897,"length1":32,"length2":34}]],"length":9512,"saved":false}
{"ts":1360866228874,"patch":[[{"diffs":[[0,"sitions\n    "],[1,"//"],[0,"console.log("]],"start1":1791,"start2":1791,"length1":24,"length2":26}]],"length":9514,"saved":false}
{"ts":1360867359323,"patch":[[{"diffs":[[0,"scripts\n"],[1,"//"],[0,"test_Not"]],"start1":33,"start2":33,"length1":16,"length2":18}]],"length":9516,"saved":false}
{"ts":1360867604974,"patch":[[{"diffs":[[0,"on(\"F#6\");\n\n"],[1,"    /* SIMPLE (RELATIVE) NOTES */\n"],[0,"    // test "]],"start1":549,"start2":549,"length1":24,"length2":58},{"diffs":[[0,"== false);\n    \n"],[1,"    /* TEST CASE (SHOULD NOT HAVE TO MATTER) */\n    console.assert(Note.fromNotation(\"c\").pos == 0);\n    \n"],[0,"    // this shou"]],"start1":895,"start2":895,"length1":32,"length2":138}]],"length":9656,"saved":false}
{"ts":1360867617714,"patch":[[{"diffs":[[0,"scripts\n"],[-1,"//"],[0,"test_Not"]],"start1":33,"start2":33,"length1":18,"length2":16}]],"length":9654,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360868361250,"patch":[[{"diffs":[[0,"scripts\n"],[1,"//"],[0,"test_Not"]],"start1":33,"start2":33,"length1":16,"length2":18}]],"length":9656,"saved":false}
{"ts":1360868372767,"patch":[[{"diffs":[[0,"true);\n\n    "],[-1,"/*"],[0,"\n    // chor"]],"start1":3347,"start2":3347,"length1":26,"length2":24}]],"length":9654,"saved":false}
{"ts":1360868560865,"patch":[[{"diffs":[[0,",7] );\n\n    "],[-1,"/*"],[0,"\n    var cho"]],"start1":3586,"start2":3586,"length1":26,"length2":24},{"diffs":[[0," [0,4,7] );\n"],[1,"    console.assert( chord1.notation() == \"C\");\n"],[0,"    var chor"]],"start1":3633,"start2":3633,"length1":24,"length2":71},{"diffs":[[0,",24] );\n    "],[-1,"*/"],[1,"\n    \n    "],[0,"\n    //var c"]],"start1":3787,"start2":3787,"length1":26,"length2":34}]],"length":9707,"saved":false}
{"ts":1360868568438,"patch":[[{"diffs":[[0," [1,5,8] );\n"],[1,"    console.assert( chord1.notation() == \"D\");\n"],[0,"    \n    var"]],"start1":3726,"start2":3726,"length1":24,"length2":71}]],"length":9754,"saved":false}
{"ts":1360868579312,"patch":[[{"diffs":[[0,",7] );\n\n    "],[1,"// a C chord"],[0,"\n    var cho"]],"start1":3586,"start2":3586,"length1":24,"length2":36},{"diffs":[[0,"() == \"C\");\n"],[1,"    \n    // a D chord\n"],[0,"    var chor"]],"start1":3692,"start2":3692,"length1":24,"length2":46}]],"length":9788,"saved":false}
{"ts":1360868589042,"patch":[[{"diffs":[[0," \n    \n    \n"],[1,"    \n"],[0,"    //var ch"]],"start1":3879,"start2":3879,"length1":24,"length2":29}]],"length":9793,"saved":false}
{"ts":1360868602669,"patch":[[{"diffs":[[0,"e.assert( chord1"],[1,"[0]"],[0,".notation() == \""]],"start1":3667,"start2":3667,"length1":32,"length2":35},{"diffs":[[0,"( chord1"],[1,"[0]"],[0,".notatio"]],"start1":3793,"start2":3793,"length1":16,"length2":19}]],"length":9799,"saved":false}
{"ts":1360868633554,"patch":[[{"diffs":[[0,"le.assert( chord"],[1,"s"],[0,"1[0].notation() "]],"start1":3666,"start2":3666,"length1":32,"length2":33},{"diffs":[[0,"t( chord"],[1,"s"],[0,"1[0].not"]],"start1":3793,"start2":3793,"length1":16,"length2":17}]],"length":9801,"saved":false}
{"ts":1360868821512,"patch":[[{"diffs":[[0," chords1 = Chord"],[1,"s"],[0,".fromNotes( [0,4"]],"start1":3618,"start2":3618,"length1":32,"length2":33},{"diffs":[[0," chords2 = Chord"],[1,"s"],[0,".fromNotes( [1,5"]],"start1":3738,"start2":3738,"length1":32,"length2":33},{"diffs":[[0," chords3 = Chord"],[1,"s"],[0,".fromNotes( [12,"]],"start1":3841,"start2":3841,"length1":32,"length2":33}]],"length":9804,"saved":false}
{"ts":1360868889541,"patch":[[{"diffs":[[0," [0,4,7] );\n"],[1,"    \n    console.log( chords1[0].notation());\n"],[0,"    console."]],"start1":3646,"start2":3646,"length1":24,"length2":70}]],"length":9850,"saved":false}
{"ts":1360869008567,"patch":[[{"diffs":[[0,"tion() == \"C"],[1,"maj"],[0,"\");\n    \n   "]],"start1":3739,"start2":3739,"length1":24,"length2":27},{"diffs":[[0,"() == \"D"],[1,"maj"],[0,"\");\n    "]],"start1":3866,"start2":3866,"length1":16,"length2":19}]],"length":9856,"saved":false}
{"ts":1360869259630,"patch":[[{"diffs":[[0,"e.assert( chords"],[-1,"1"],[1,"2"],[0,"[0].notation() ="]],"start1":3837,"start2":3837,"length1":33,"length2":33}]],"length":9856,"saved":false}
{"ts":1360869268624,"patch":[[{"diffs":[[0,",24] );\n    "],[1,"console.log( chords3 );"],[0,"\n    \n    \n "]],"start1":3931,"start2":3931,"length1":24,"length2":47}]],"length":9879,"saved":false}
{"ts":1360869325397,"patch":[[{"diffs":[[0,"  \n    \n    "],[-1,"//"],[0,"var chords4 "]],"start1":3974,"start2":3974,"length1":26,"length2":24},{"diffs":[[0,"14 ] );\n    "],[-1,"//"],[0,"var chords5 "]],"start1":4032,"start2":4032,"length1":26,"length2":24},{"diffs":[[0,"   \n    "],[-1,"/*"],[0,"\n    _.e"]],"start1":4099,"start2":4099,"length1":18,"length2":16},{"diffs":[[0,"});\n    "],[-1,"*/"],[0,"\n   \n}\n\n"]],"start1":4469,"start2":4469,"length1":18,"length2":16}]],"length":9871,"saved":false}
{"ts":1360869352459,"patch":[[{"diffs":[[0,"   // a "],[-1,"D"],[1,"C#"],[0," chord\n "]],"start1":3764,"start2":3764,"length1":17,"length2":18},{"diffs":[[0,"n() == \""],[-1,"D"],[1,"C#"],[0,"maj\");\n "]],"start1":3866,"start2":3866,"length1":17,"length2":18}]],"length":9873,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360883986841,"patch":[[{"diffs":[[0,"otes();\n"],[1,"//"],[0,"test_Cho"]],"start1":49,"start2":49,"length1":16,"length2":18},{"diffs":[[0,"itar();\n"],[1,"test_Match();"],[0,"\n\nfuncti"]],"start1":83,"start2":83,"length1":16,"length2":29},{"diffs":[[0,"  \n    \n\n}\n\n"],[1,"function test_Match() {\n    \n    var matches = MUSIQ.match(\"c\");\n    console.log(matches);\n}"]],"start1":9876,"start2":9876,"length1":12,"length2":104}]],"length":9980,"saved":false}
{"ts":1360885414384,"patch":[[{"diffs":[[0,"tches);\n"],[1,"    \n    console.assert( MUSIQ.isValidNote(\"c\") );\n    console.assert( MUSIQ.isValidChord(\"c\") );\n"],[0,"}"]],"start1":9971,"start2":9971,"length1":9,"length2":107}]],"length":10078,"saved":false}
{"ts":1360885542206,"patch":[[{"diffs":[[0,"\"c\") );\n"],[1,"    \n    \n"],[0,"}"]],"start1":10069,"start2":10069,"length1":9,"length2":19}]],"length":10088,"saved":false}
{"ts":1360887446860,"patch":[[{"diffs":[[0,"(matches);\n    \n"],[1,"    // get the note match\n    console.assert( matches[0].hasName(\"B#\") );\n    \n"],[0,"    console.asse"]],"start1":9968,"start2":9968,"length1":32,"length2":111}]],"length":10167,"saved":false}
{"ts":1360887470164,"patch":[[{"diffs":[[0,"te match"],[1,", it's a C, but it also\n    // has the name B# (not that often used)"],[0,"\n    con"]],"start1":10001,"start2":10001,"length1":16,"length2":84}]],"length":10235,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360899909859,"patch":[[{"diffs":[[0,"scripts\n"],[-1,"//"],[0,"test_Not"]],"start1":33,"start2":33,"length1":18,"length2":16},{"diffs":[[0,"itar();\n"],[1,"//"],[0,"test_Mat"]],"start1":81,"start2":81,"length1":16,"length2":18}]],"length":10235,"saved":false}
{"ts":1360899945550,"patch":[[{"diffs":[[0,"== false);\n    \n"],[1,"    f = Note.fromNotation(\"C 6 note\");\n    console.log(f);\n    console.assert(f.relative == false);\n    \n"],[0,"    // test shar"]],"start1":492,"start2":492,"length1":32,"length2":137}]],"length":10340,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361068818338,"patch":[[{"diffs":[[0,"t_Guitar();\n"],[1,"test_GuitarChordVariations();\n"],[0,"//test_Match"]],"start1":77,"start2":77,"length1":24,"length2":54},{"diffs":[[0,"  \n    \n\n}\n\n"],[1,"function test_GuitarChordVariations(){\n    \n}\n\n"],[0,"function tes"]],"start1":10011,"start2":10011,"length1":24,"length2":71}]],"length":10417,"saved":false}
{"ts":1361068846190,"patch":[[{"diffs":[[0,"ons(){\n    \n"],[1,"    var c = Chord.fromNotation(\"c\");\n    var vars = GuitarChord.\n"],[0,"}\n\nfunction "]],"start1":10055,"start2":10055,"length1":24,"length2":89}]],"length":10482,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361069215176,"patch":[[{"diffs":[[0,"ons(){\n    \n"],[1,"    console.assert(c.contains(Note.fromNotation(\"G\")));\n    \n"],[0,"    var c = "]],"start1":10055,"start2":10055,"length1":24,"length2":85}]],"length":10543,"saved":false}
{"ts":1361069248407,"patch":[[{"diffs":[[0,"arChord."],[1,"fromChord(c);"],[0,"\n}\n\nfunc"]],"start1":10184,"start2":10184,"length1":16,"length2":29}]],"length":10556,"saved":false}
{"ts":1361069263586,"patch":[[{"diffs":[[0,"ord(c);\n"],[1,"    \n    console.log(vars);\n"],[0,"}\n\nfunct"]],"start1":10198,"start2":10198,"length1":16,"length2":44}]],"length":10584,"saved":false}
{"ts":1361069349985,"patch":[[{"diffs":[[0,"scripts\n"],[1,"//"],[0,"test_Not"]],"start1":33,"start2":33,"length1":16,"length2":18}]],"length":10586,"saved":false}
{"ts":1361069389571,"patch":[[{"diffs":[[0,"ons(){\n    \n"],[1,"    var c = Chord.fromNotation(\"c\");\n    \n"],[0,"    console."]],"start1":10057,"start2":10057,"length1":24,"length2":66},{"diffs":[[0,"    "],[-1,"var c = Chord.fromNotation(\"c\");"],[0,"\n   "]],"start1":10172,"start2":10172,"length1":40,"length2":8}]],"length":10596,"saved":false}
{"ts":1361069448281,"patch":[[{"diffs":[[0,"ation(\"c\");\n"],[1,"    console.log(c);\n"],[0,"    \n    con"]],"start1":10094,"start2":10094,"length1":24,"length2":44}]],"length":10616,"saved":false}
{"ts":1361069766581,"patch":[[{"diffs":[[0,"  \n    \n    "],[1,"//"],[0,"var vars = G"]],"start1":10189,"start2":10189,"length1":24,"length2":26}]],"length":10618,"saved":false}
{"ts":1361069787214,"patch":[[{"diffs":[[0,"le.log(c);\n    \n"],[1,"    var g = Note.fromNotation(\"G\");\n    console.log(g)\n    \n"],[0,"    console.asse"]],"start1":10115,"start2":10115,"length1":32,"length2":92},{"diffs":[[0,"ontains("],[-1,"Note.fromNotation(\"G\")"],[0,"));\n    "]],"start1":10213,"start2":10213,"length1":38,"length2":16}]],"length":10656,"saved":false}
{"ts":1361069789211,"patch":[[{"diffs":[[0,"e.log(g)"],[1,";"],[0,"\n    \n  "]],"start1":10177,"start2":10177,"length1":16,"length2":17}]],"length":10657,"saved":false}
{"ts":1361069948586,"patch":[[{"diffs":[[0,"ontains("],[1,"g"],[0,"));\n    "]],"start1":10214,"start2":10214,"length1":16,"length2":17}]],"length":10658,"saved":false}
{"ts":1361069961866,"patch":[[{"diffs":[[0,"  \n    \n    "],[-1,"//"],[0,"var vars = G"]],"start1":10229,"start2":10229,"length1":26,"length2":24}]],"length":10656,"saved":false}
{"ts":1361070011123,"patch":[[{"diffs":[[0,"ons(){\n    \n"],[1,"    var guitar = new Guitar();\n    \n"],[0,"    var c = "]],"start1":10057,"start2":10057,"length1":24,"length2":60},{"diffs":[[0,"omChord("],[1,"guitar, "],[0,"c);\n    "]],"start1":10302,"start2":10302,"length1":16,"length2":24}]],"length":10700,"saved":false}
{"ts":1361070467381,"patch":[[{"diffs":[[0,"ole.log(c);\n"],[1,"    console.assert(c.relative);\n"],[0,"    \n    var"]],"start1":10150,"start2":10150,"length1":24,"length2":56}]],"length":10732,"saved":false}
{"ts":1361070486543,"patch":[[{"diffs":[[0,"log(g);\n"],[1,"    console.assert(g.relative);\n"],[0,"    \n   "]],"start1":10247,"start2":10247,"length1":16,"length2":48}]],"length":10764,"saved":false}
