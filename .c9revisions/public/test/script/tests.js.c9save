{"ts":1363912018055,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1363912024745,"patch":[[{"diffs":[[1,"test( \"hello test\", function() {\n  ok( 1 == \"1\", \"Passed!\" );\n});"]],"start1":0,"start2":0,"length1":0,"length2":65}]],"length":65,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363912675622,"patch":[[{"diffs":[[-1,"test( \"hello test\", function() {\n  ok( 1 == \"1\", \"Passed!\" );\n});"],[1,"// Test script\n\n\n// EXECUTE test scripts\n\n//test_Match();\n\n    // test notes with octave indication\n    var c = Note.fromNotation(\"C0\");\n    console.assert(c.relative == false);\n    \n    var d = Note.fromNotation(\"D1\");\n    console.assert(d.relative == false);\n    \n    var e = Note.fromNotation(\"E2\");\n    console.assert(e.relative == false);\n    \n    var f = Note.fromNotation(\"F3\");\n    console.assert(f.relative == false);\n    \n    f = Note.fromNotation(\"C 6 note\");\n    console.log(f);\n    console.assert(f.relative == false);\n    \n    // test sharp notes\n    var fsharp = Note.fromNotation(\"F#6\");\n\n    /* SIMPLE (RELATIVE) NOTES */\n    // test simple notes\n    var simplec = Note.fromNotation(\"C\");\n    console.assert(simplec.relative == true);\n    \n    var simple_fsharp = Note.fromNotation(\"F#\");\n    console.assert(simple_fsharp.relative == true);\n    \n    var cflat = Note.fromNotation(\"Cb3\");\n    console.assert(cflat.relative == false);\n    \n    /* TEST CASE (SHOULD NOT HAVE TO MATTER) */\n    console.assert(Note.fromNotation(\"c\").pos == 0);\n    \n    // this should result in warnings\n    console.log(\"Four notes that can't be found: \");\n    console.log(typeof Note.fromNotation(\"Bleg\") == 'undefined');\n    console.log(typeof Note.fromNotation(\"Cf\") == 'undefined');\n    console.log(typeof Note.fromNotation(\"H\") == 'undefined');\n    console.log(typeof Note.fromNotation(\"C-\") == 'undefined');\n    \n    // this should be fine:\n    console.log(\"No errors: \");\n    \n    console.log(\"B\");\n    console.assert(Note.fromNotation(\"B\").pos == 11);\n    \n    console.log(\"Gb\");\n    console.assert(Note.fromNotation(\"Gb\").pos == 6);\n    \n    console.log(\"Dbbb (D triple flat)\");\n    console.assert(Note.fromNotation(\"Dbbb\").pos == -1);\n    \n    console.log(\"Fx (double sharp)\");\n    console.assert(Note.fromNotation(\"Fx\").pos == 7);\n    \n    \n    console.log(\"Fx (double sharp, octave 2)\");\n    console.assert(Note.fromNotation(\"Fx1\").pos == 19);\n    \n\n    // check note positions\n    //console.log( Note.fromNotation(\"Cb1\").pos);\n    console.assert( Note.fromNotation(\"Cb1\").pos == 11);\n    \n    //console.log( Note.fromNotation(\"B#\"));\n    console.assert( Note.fromNotation(\"B#\").pos == 0);\n\n    // log some distances\n    console.assert(c.distance(d) == 14);\n    console.assert(c.relativeDistance(d) == 2);\n\n    // and the other way around\n    console.assert(d.distance(c) == -14);\n    console.assert(d.relativeDistance(c) == 10);\n\n    // get the interval\n    console.assert(d.interval(c).name() == \"minor seventh\");\n\n    // get the signature\n    console.assert(d.signature() == 2);\n\n    // position on the circle of fifths\n    console.assert(c.cofPosition() == 0);\n\n    // notation\n\n    console.assert(fsharp.simpleNotation() == \"F#\");\n\n    // this fails!\n    //console.assert(cflat.simpleNotation() == \"Cb\");\n\n    // NOTE: this doesn't work!\n    //console.assert(Note.fromNotation(\"Fb\").simpleNotation() == \"Fb\");\n    \n    // test octave\n    console.log(\"Transposing C0 -> pos = \" + c.transpose('octave').pos)\n    console.assert(c.transpose('octave').pos == 12);\n    \n    console.assert(c.transpose(Interval.fromName('octave')).pos == 12);\n    \n    \n}\n\n// CHORDS\n\nfunction test_Chords() {\n\n    var cmaj = Chord.fromNotation(\"C\");\n    \n    console.log( cmaj );\n    // check if the tonic is relative\n    console.assert( cmaj.tonic.pos == 0);\n    console.assert( cmaj.tonic.relative == true);\n\n    \n    // chord from notation\n    var dmaj7 = Chord.fromNotation(\"Dmaj7\");\n\n    // transpose it a bit\n    dmaj7.tonic = Note.fromNotation(\"D5\");\n    \n    console.log( dmaj7.noteObjects());\n\n    //var fmaj7 = Chord.fromNotes( [0,4,7] );\n\n    // a C chord\n    var chords1 = Chords.fromNotes( [0,4,7] );\n    \n    console.log( chords1[0].notation());\n    console.assert( chords1[0].notation() == \"Cmaj\");\n    \n    // a C# chord\n    var chords2 = Chords.fromNotes( [1,5,8] );\n    console.assert( chords2[0].notation() == \"C#maj\");\n    \n    var chords3 = Chords.fromNotes( [12,15,19,24] );\n    console.log( chords3 );\n    \n    \n    \n    var chords4 = Chord.fromNotes( [ 0, 4, 7, 11, 14 ] );\n    var chords5 = Chord.fromNotes( [ 0, 4, 7, 11, 14 ] );\n    \n    \n    _.each(chords1, function(chord){ console.log(chord.notation()); });\n    _.each(chords2, function(chord){ console.log(chord.notation()); });\n    _.each(chords3, function(chord){ console.log(chord.notation()); });\n    \n    _.each(chords4, function(chord){ console.log(chord.notation()); });\n    _.each(chords5, function(chord){ console.log(chord.notation()); });\n    \n\n\n    /* GUITAR TESTS */\n    var guitar = new Guitar();\n    \n    /* NOTES ON GUITAR */\n    //console.log(guitar.notes[0][0].note.notation());\n    console.assert(guitar.strings[1].base == 45);\n    \n    console.assert(guitar.notes[0][0].note.notation() == \"E3\");\n    console.assert(guitar.notationFor( 1, 3 ) == \"C\");\n    \n    /* NOTES ON SPECIFIC FRET */\n    console.log(guitar.notesOnFret(1));\n    console.assert(guitar.notesOnFret(1)[0].notation() == \"F3\");\n    \n    /* MAJOR CHORDS */\n\n    // F\n    console.info(\"Looking for F ( 1 3 3 2 1 1 )\");\n    var Fmaj = guitar.chordsFromFingerPos([1, 3, 3, 2, 1, 1]);\n    _.each(Fmaj, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Fmaj[0].notation() == \"F\");\n\n    // C\n    console.info(\"Looking for C ( x 3 5 5 5 3 )\");\n    var Cmaj = guitar.chordsFromFingerPos([-1, 3, 5, 5, 5, 3]);\n    _.each(Cmaj, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Cmaj[0].notation() == \"C\");\n\n    // another C\n    console.info(\"Looking for C ( x 3 2 0 1 0 )\");\n    var Cmaj = guitar.chordsFromFingerPos([-1, 3, 2, 0, 1, 0]);\n    _.each(Cmaj, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Cmaj[0].notation() == \"C\");\n\n\n    /* MINOR CHORDS */\n\n    // let's plan an E minor on the guitar!\n    console.info(\"Looking for Em ( 0 2 2 0 0 0 )\");\n    var emin = guitar.chordsFromFingerPos([0, 2, 2, 0, 0, 0]);\n    _.each(emin, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(emin[0].notation() == \"Em\");\n\n    // an an e minor power chord\n    console.info(\"Looking for Em\");\n    var eminp = guitar.chordsFromFingerPos([0, 2, 2, - 1, - 1, - 1]);\n    _.each(eminp, function(chord) {\n        console.log(chord.notation());\n    });\n    //console.assert( emin[0].notation() == \"Em\");\n\n    /* DIMINISHED TRIADS */\n\n    /* AUGMENTED TRIADS */\n\n    /* SEVENTH (7th) CHORDS */\n\n    // and a G minor 7!\n    console.warn(\"Looking for Gm7 (3, 5, 3, 3, 3, 3)\");\n    var gm7 = guitar.chordsFromFingerPos([3, 5, 3, 3, 3, 3]);\n    _.each(gm7, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(gm7[0].notation() == \"Gm7\");\n\n    // A7\n    console.log(\"Looking for A7 (5, 7, 5, 6, 5, 5)\");\n    var A7 = guitar.chordsFromFingerPos([5, 7, 5, 6, 5, 5]);\n    _.each(A7, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(A7[0].notation() == \"A7\");\n\n    // A7\n    console.log(\"Looking for A7 (x 0 2 0 2 0)\");\n    var A72 = guitar.chordsFromFingerPos([-1, 0, 2, 0, 2, 0]);\n    _.each(A72, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(A72[0].notation() == \"A7\");\n\n    // A7\n    console.log(\"Looking for A7 (5 x 5 6 5 x)\");\n    var A73 = guitar.chordsFromFingerPos([5, - 1, 5, 6, 5, - 1]);\n    _.each(A73, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(A73[0].notation() == \"A7\");\n\n    // Bm7b5\n    console.log(\"Looking for Bm7b5 ( x 2 3 2 3 x )\");\n    var Bm7b5 = guitar.chordsFromFingerPos([-1, 2, 3, 2, 3, - 1]);\n    _.each(Bm7b5, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Bm7b5[0].notation() == \"Bm7b5\");\n\n    // Bdim7\n    console.log(\"Looking for Bdim ( x 2 3 1 3 x )\");\n    var Bdim = guitar.chordsFromFingerPos([-1, 2, 3, 1, 3, - 1]);\n    _.each(Bdim, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Bdim[0].notation() == \"Bdim7\");\n\n    // Gmaj7\n    console.log(\"Looking for Gmaj7 ( 3 x 4 4 3 )\");\n    var Gmaj7 = guitar.chordsFromFingerPos([3, - 1, 4, 4, 3, - 1]);\n    _.each(Gmaj7, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Gmaj7[0].notation() == \"Gmaj7\");\n\n    /* NINTH (9th) CHORDS */\n\n    // C#9\n    console.log(\"Looking for C#9\");\n    var Cis9 = guitar.chordsFromFingerPos([-1, 4, 3, 4, 4, - 1]);\n    _.each(Cis9, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Cis9[0].notation() == \"C#9\");\n\n    /* SIX CHORDS */\n\n    // Am6\n    console.log(\"Looking for Am6\");\n    var Am6 = guitar.chordsFromFingerPos([5, - 1, 4, 5, 5, - 1]);\n    _.each(Am6, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Am6[0].notation() == \"Am6\");\n\n    // C6/9\n    console.log(\"Looking for C6/9\");\n    var C69 = guitar.chordsFromFingerPos([3, 3, 2, 2, 3, 3]);\n    _.each(C69, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(C69[0].notation() == \"C6/9\");\n\n    /* ELEVENTH CHORDS */\n\n    // Cm11\n    console.log(\"Looking for Cm11\");\n    var Cm11 = guitar.chordsFromFingerPos([8, - 1, 8, 8, 6, - 1]);\n    _.each(Cm11, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Cm11[0].notation() == \"Cm11\");\n\n    /* THIRTEENTH CHORDS */\n    // G13\n    console.log(\"Looking for G13\");\n    var G13 = guitar.chordsFromFingerPos([3, - 1, 3, 4, 5, - 1]);\n    _.each(G13, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(G13[0].notation() == \"G13\");\n\n    // G b13\n    console.log(\"Looking for G b13\");\n    var Gb13 = guitar.chordsFromFingerPos([3, - 1, 3, 4, 4, - 1]);\n    _.each(Gb13, function(chord) {\n        console.log(chord.notation());\n    });\n    console.assert(Gb13[0].notation() == \"G b13\");\n    \n    \n\n    var guitar = new Guitar();\n    \n    var c = Chord.fromNotation(\"c\");\n    console.log(c);\n    console.assert(c.relative);\n    \n    var g = Note.fromNotation(\"G\");\n    console.log(g);\n    console.assert(g.relative);\n    \n    console.assert(c.contains(g));\n    \n    \n    var vars = GuitarChord.fromChord(guitar, c);\n    \n    console.log(vars);\n    \n\n    var matches = MUSIQ.match(\"c\");\n    console.log(matches);\n    \n    // get the note match, it's a C, but it also\n    // has the name B# (not that often used)\n    console.assert( matches[0].hasName(\"B#\") );\n    \n    console.assert( MUSIQ.isValidNote(\"c\") );\n    console.assert( MUSIQ.isValidChord(\"c\") );\n    \n    \n}"]],"start1":0,"start2":0,"length1":65,"length2":10553}]],"length":10553,"saved":false}
{"ts":1363912706713,"patch":[[{"diffs":[[0,"2);\n    "],[-1,"\n    \n}"],[0,"\n\n// CHO"]],"start1":3144,"start2":3144,"length1":23,"length2":16}]],"length":10546,"saved":false}
{"ts":1363912718507,"patch":[[{"diffs":[[0,");\n    \n"],[-1,"\n"],[0,"// CHORD"]],"start1":3145,"start2":3145,"length1":17,"length2":16},{"diffs":[[0,"DS\n\n"],[-1,"function test_Chords() {\n\n"],[0,"    "]],"start1":3160,"start2":3160,"length1":34,"length2":8},{"diffs":[[0," \n  "],[-1,"  \n}"]],"start1":10511,"start2":10511,"length1":8,"length2":4}]],"length":10515,"saved":false}
{"ts":1363912726664,"patch":[[{"diffs":[[0,"t_Match();\n\n"],[1,"// NOTES\n\n"],[0,"    // test "]],"start1":47,"start2":47,"length1":24,"length2":34}]],"length":10525,"saved":false}
{"ts":1363912923583,"patch":[[{"diffs":[[0,"ES\n\n"],[-1,"    // test notes with octave indication"],[1,"test( \"Note object\", function(){\n    "],[0,"\n   "]],"start1":65,"start2":65,"length1":48,"length2":45},{"diffs":[[0,");\n    \n"],[1,"    \n});\n    // test notes with octave indication\n    \n"],[0,"// CHORD"]],"start1":3152,"start2":3152,"length1":16,"length2":71}]],"length":10577,"saved":false}
{"ts":1363913140729,"patch":[[{"diffs":[[0,"(\"C0\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(c.relative "]],"start1":136,"start2":136,"length1":38,"length2":29},{"diffs":[[0,"equal(c.relative"],[1,","],[0," "],[-1,"=="],[0," false);\n    \n  "]],"start1":148,"start2":148,"length1":35,"length2":34},{"diffs":[[0,"(\"D1\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(d.relative "]],"start1":209,"start2":209,"length1":38,"length2":29},{"diffs":[[0,"equal(d.relative"],[1,","],[0," "],[-1,"=="],[0," false);\n    \n  "]],"start1":221,"start2":221,"length1":35,"length2":34},{"diffs":[[0,"\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(e.relat"]],"start1":286,"start2":286,"length1":30,"length2":21},{"diffs":[[0,"equal(e.relative"],[1,","],[0," "],[-1,"=="],[0," false);\n    \n  "]],"start1":294,"start2":294,"length1":35,"length2":34},{"diffs":[[0,"(\"F3\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(f.relative "]],"start1":355,"start2":355,"length1":38,"length2":29},{"diffs":[[0,"equal(f.relative"],[1,","],[0," "],[-1,"=="],[0," false);\n    \n  "]],"start1":367,"start2":367,"length1":35,"length2":34},{"diffs":[[0,"f);\n    "],[-1,"console.assert"],[1,"equal"],[0,"(f.relat"]],"start1":454,"start2":454,"length1":30,"length2":21},{"diffs":[[0,"equal(f.relative"],[1,","],[0," "],[-1,"=="],[0," false);\n    \n  "]],"start1":462,"start2":462,"length1":35,"length2":34},{"diffs":[[0,"n(\"C\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(simplec.rel"]],"start1":655,"start2":655,"length1":38,"length2":29},{"diffs":[[0,"simplec.relative"],[1,","],[0," "],[-1,"=="],[0," true);\n    \n   "]],"start1":673,"start2":673,"length1":35,"length2":34},{"diffs":[[0,"\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(simple_"]],"start1":749,"start2":749,"length1":30,"length2":21},{"diffs":[[0,"_fsharp.relative"],[1,","],[0," "],[-1,"=="],[0," true);\n    \n   "]],"start1":769,"start2":769,"length1":35,"length2":34},{"diffs":[[0,"\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(cflat.r"]],"start1":838,"start2":838,"length1":30,"length2":21},{"diffs":[[0,"relative"],[1,","],[0," "],[-1,"=="],[0," false);"]],"start1":858,"start2":858,"length1":19,"length2":18},{"diffs":[[0,"TER) */\n    "],[-1,"console.assert"],[1,"equal"],[0,"(Note.fromNo"]],"start1":922,"start2":922,"length1":38,"length2":29},{"diffs":[[0,"ion(\"c\").pos"],[1,","],[0," "],[-1,"=="],[0," 0);\n    \n  "]],"start1":954,"start2":954,"length1":27,"length2":26},{"diffs":[[0,"(\"Bleg\")"],[1,","],[0," "],[-1,"=="],[0," 'undefi"]],"start1":1109,"start2":1109,"length1":19,"length2":18},{"diffs":[[0,"on(\"Cf\")"],[1,","],[0," "],[-1,"=="],[0," 'undefi"]],"start1":1172,"start2":1172,"length1":19,"length2":18},{"diffs":[[0,"ion(\"H\")"],[1,","],[0," "],[-1,"=="],[0," 'undefi"]],"start1":1234,"start2":1234,"length1":19,"length2":18},{"diffs":[[0,"on(\"C-\")"],[1,","],[0," "],[-1,"=="],[0," 'undefi"]],"start1":1297,"start2":1297,"length1":19,"length2":18},{"diffs":[[0,"g(\"B\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(Note.fromNo"]],"start1":1406,"start2":1406,"length1":38,"length2":29},{"diffs":[[0,"ion(\"B\").pos"],[1,","],[0," "],[-1,"=="],[0," 11);\n    \n "]],"start1":1438,"start2":1438,"length1":27,"length2":26},{"diffs":[[0,"(\"Gb\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(Note.fromNo"]],"start1":1478,"start2":1478,"length1":38,"length2":29},{"diffs":[[0,"Gb\").pos"],[1,","],[0," "],[-1,"=="],[0," 6);\n   "]],"start1":1515,"start2":1515,"length1":19,"length2":18},{"diffs":[[0,"lat)\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(Note.fromNo"]],"start1":1568,"start2":1568,"length1":38,"length2":29},{"diffs":[[0,"bb\").pos"],[1,","],[0," "],[-1,"=="],[0," -1);\n  "]],"start1":1607,"start2":1607,"length1":19,"length2":18},{"diffs":[[0,"arp)\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(Note.fromNo"]],"start1":1658,"start2":1658,"length1":38,"length2":29},{"diffs":[[0,"Fx\").pos"],[1,","],[0," "],[-1,"=="],[0," 7);\n   "]],"start1":1695,"start2":1695,"length1":19,"length2":18},{"diffs":[[0,"\");\n    "],[-1,"console.assert"],[1,"equal"],[0,"(Note.fr"]],"start1":1764,"start2":1764,"length1":30,"length2":21},{"diffs":[[0,"x1\").pos"],[1,","],[0," "],[-1,"=="],[0," 19);\n  "]],"start1":1798,"start2":1798,"length1":19,"length2":18},{"diffs":[[0,").pos);\n    "],[-1,"console.assert"],[1,"equal"],[0,"( Note.fromN"]],"start1":1890,"start2":1890,"length1":38,"length2":29},{"diffs":[[0,"b1\").pos"],[1,","],[0," "],[-1,"=="],[0," 11);\n  "]],"start1":1929,"start2":1929,"length1":19,"length2":18},{"diffs":[[0,"));\n    "],[-1,"console.assert"],[1,"equal"],[0,"( Note.f"]],"start1":1991,"start2":1991,"length1":30,"length2":21},{"diffs":[[0,"on(\"B#\").pos"],[1,","],[0," "],[-1,"=="],[0," 0);\n\n    //"]],"start1":2021,"start2":2021,"length1":27,"length2":26},{"diffs":[[0,"ces\n    "],[-1,"console.assert"],[1,"equal"],[0,"(c.dista"]],"start1":2063,"start2":2063,"length1":30,"length2":21},{"diffs":[[0,"tance(d)"],[1,","],[0," "],[-1,"=="],[0," 14);\n  "]],"start1":2082,"start2":2082,"length1":19,"length2":18},{"diffs":[[0,",  14);\n    "],[-1,"console.assert"],[1,"equal"],[0,"(c.relativeD"]],"start1":2090,"start2":2090,"length1":38,"length2":29},{"diffs":[[0,"tance(d)"],[1,","],[0," "],[-1,"=="],[0," 2);\n\n  "]],"start1":2121,"start2":2121,"length1":19,"length2":18},{"diffs":[[0,"und\n    "],[-1,"console.assert"],[1,"equal"],[0,"(d.dista"]],"start1":2165,"start2":2165,"length1":30,"length2":21},{"diffs":[[0,"tance(c)"],[1,","],[0," "],[-1,"=="],[0," -14);\n "]],"start1":2184,"start2":2184,"length1":19,"length2":18},{"diffs":[[0,"4);\n    "],[-1,"console.assert"],[1,"equal"],[0,"(d.relat"]],"start1":2197,"start2":2197,"length1":30,"length2":21},{"diffs":[[0,"tance(c)"],[1,","],[0," "],[-1,"=="],[0," 10);\n\n "]],"start1":2224,"start2":2224,"length1":19,"length2":18},{"diffs":[[0,"val\n    "],[-1,"console.assert"],[1,"equal"],[0,"(d.inter"]],"start1":2261,"start2":2261,"length1":30,"length2":21},{"diffs":[[0,").name()"],[1,","],[0," "],[-1,"=="],[0," \"minor "]],"start1":2287,"start2":2287,"length1":19,"length2":18},{"diffs":[[0,"ure\n    "],[-1,"console.assert"],[1,"equal"],[0,"(d.signa"]],"start1":2338,"start2":2338,"length1":30,"length2":21},{"diffs":[[0,"nature()"],[1,","],[0," "],[-1,"=="],[0," 2);\n\n  "]],"start1":2357,"start2":2357,"length1":19,"length2":18},{"diffs":[[0," fifths\n    "],[-1,"console.assert"],[1,"equal"],[0,"(c.cofPositi"]],"start1":2405,"start2":2405,"length1":38,"length2":29},{"diffs":[[0,"sition()"],[1,","],[0," "],[-1,"=="],[0," 0);\n\n  "]],"start1":2430,"start2":2430,"length1":19,"length2":18},{"diffs":[[0,"on\n\n    "],[-1,"console.assert"],[1,"equal"],[0,"(fsharp."]],"start1":2459,"start2":2459,"length1":30,"length2":21},{"diffs":[[0,"tation()"],[1,","],[0," "],[-1,"=="],[0," \"F#\");\n"]],"start1":2488,"start2":2488,"length1":19,"length2":18},{"diffs":[[0,"!\n    //"],[-1,"console.assert"],[1,"equal"],[0,"(cflat.s"]],"start1":2524,"start2":2524,"length1":30,"length2":21},{"diffs":[[0,"tation()"],[1,","],[0," "],[-1,"=="],[0," \"Cb\");\n"]],"start1":2552,"start2":2552,"length1":19,"length2":18},{"diffs":[[0,"!\n    //"],[-1,"console.assert"],[1,"equal"],[0,"(Note.fr"]],"start1":2601,"start2":2601,"length1":30,"length2":21},{"diffs":[[0,"tation()"],[1,","],[0," "],[-1,"=="],[0," \"Fb\");\n"]],"start1":2647,"start2":2647,"length1":19,"length2":18},{"diffs":[[0,"').pos)\n    "],[-1,"console.assert"],[1,"equal"],[0,"(c.transpose"]],"start1":2753,"start2":2753,"length1":38,"length2":29},{"diffs":[[0,"octave').pos"],[1,","],[0," "],[-1,"=="],[0," 12);\n    \n "]],"start1":2784,"start2":2784,"length1":27,"length2":26},{"diffs":[[0,"   \n    "],[-1,"console.assert"],[1,"equal"],[0,"(c.trans"]],"start1":2805,"start2":2805,"length1":30,"length2":21},{"diffs":[[0,"e')).pos"],[1,","],[0," "],[-1,"=="],[0," 12);\n  "]],"start1":2855,"start2":2855,"length1":19,"length2":18}]],"length":10293,"saved":false}
{"ts":1363913345399,"patch":[[{"diffs":[[0,"ation(\"F"],[-1,"x"],[1,"##"],[0,"\").pos, "]],"start1":1688,"start2":1688,"length1":17,"length2":18},{"diffs":[[0,"ation(\"F"],[-1,"x"],[1,"##"],[0,"1\").pos,"]],"start1":1791,"start2":1791,"length1":17,"length2":18}]],"length":10295,"saved":false}
{"ts":1363913921205,"patch":[[{"diffs":[[0,"CHORDS\n\n"],[1,"test( \"Chord object\", function(){\n\n"],[0,"    var "]],"start1":2936,"start2":2936,"length1":16,"length2":51},{"diffs":[[0,"= \"G b13\");\n"],[-1,"    "],[1,"});\n\ntest( \"Guitar object\", function(){"],[0,"\n    \n\n    v"]],"start1":9642,"start2":9642,"length1":28,"length2":63},{"diffs":[[0,"rd(\"c\") );\n    \n"],[-1,"  "],[1,"});"]],"start1":10347,"start2":10347,"length1":18,"length2":19}]],"length":10366,"saved":false}
{"ts":1363913943145,"patch":[[{"diffs":[[0,"elative\n    "],[-1,"console.assert"],[1,"ok"],[0,"( cmaj.tonic"]],"start1":3079,"start2":3079,"length1":38,"length2":26},{"diffs":[[0,"0);\n    "],[-1,"console.assert"],[1,"ok"],[0,"( cmaj.t"]],"start1":3113,"start2":3113,"length1":30,"length2":18},{"diffs":[[0,"ion());\n    "],[-1,"console.assert"],[1,"ok"],[0,"( chords1[0]"]],"start1":3497,"start2":3497,"length1":38,"length2":26},{"diffs":[[0," );\n    "],[-1,"console.assert"],[1,"ok"],[0,"( chords"]],"start1":3613,"start2":3613,"length1":30,"length2":18},{"diffs":[[0,"ion());\n    "],[-1,"console.assert"],[1,"ok"],[0,"(guitar.stri"]],"start1":4391,"start2":4391,"length1":38,"length2":26},{"diffs":[[0,");\n    \n    "],[-1,"console.assert"],[1,"ok"],[0,"(guitar.note"]],"start1":4434,"start2":4434,"length1":38,"length2":26},{"diffs":[[0," \"E3\");\n    "],[-1,"console.assert"],[1,"ok"],[0,"(guitar.nota"]],"start1":4486,"start2":4486,"length1":38,"length2":26},{"diffs":[[0,"));\n    "],[-1,"console.assert"],[1,"ok"],[0,"(guitar."]],"start1":4611,"start2":4611,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Fmaj[0]"]],"start1":4898,"start2":4898,"length1":30,"length2":18},{"diffs":[[0,"    });\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Cmaj[0].not"]],"start1":5136,"start2":5136,"length1":38,"length2":26},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Cmaj[0]"]],"start1":5390,"start2":5390,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(emin[0]"]],"start1":5692,"start2":5692,"length1":30,"length2":18},{"diffs":[[0,";\n    //"],[-1,"console.assert"],[1,"ok"],[0,"( emin[0"]],"start1":5953,"start2":5953,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(gm7[0]."]],"start1":6303,"start2":6303,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(A7[0].n"]],"start1":6545,"start2":6545,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(A72[0]."]],"start1":6783,"start2":6783,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(A73[0]."]],"start1":7025,"start2":7025,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Bm7b5[0"]],"start1":7278,"start2":7278,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Bdim[0]"]],"start1":7533,"start2":7533,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Gmaj7[0"]],"start1":7789,"start2":7789,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Cis9[0]"]],"start1":8055,"start2":8055,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Am6[0]."]],"start1":8309,"start2":8309,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(C69[0]."]],"start1":8538,"start2":8538,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Cm11[0]"]],"start1":8801,"start2":8801,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(G13[0]."]],"start1":9062,"start2":9062,"length1":30,"length2":18},{"diffs":[[0,"});\n    "],[-1,"console.assert"],[1,"ok"],[0,"(Gb13[0]"]],"start1":9299,"start2":9299,"length1":30,"length2":18},{"diffs":[[0,"c);\n    "],[-1,"console.assert"],[1,"ok"],[0,"(c.relat"]],"start1":9477,"start2":9477,"length1":30,"length2":18},{"diffs":[[0,"g);\n    "],[-1,"console.assert"],[1,"ok"],[0,"(g.relat"]],"start1":9558,"start2":9558,"length1":30,"length2":18},{"diffs":[[0,"   \n    "],[-1,"console.assert"],[1,"ok"],[0,"(c.conta"]],"start1":9583,"start2":9583,"length1":30,"length2":18},{"diffs":[[0,"ed)\n    "],[-1,"console.assert"],[1,"ok"],[0,"( matche"]],"start1":9860,"start2":9860,"length1":30,"length2":18},{"diffs":[[0,");\n    \n    "],[-1,"console.assert"],[1,"ok"],[0,"( MUSIQ.isVa"]],"start1":9897,"start2":9897,"length1":38,"length2":26},{"diffs":[[0,"    "],[-1,"console.assert"],[1,"ok"],[0,"( MU"]],"start1":9939,"start2":9939,"length1":22,"length2":10}]],"length":9982,"saved":false}
{"ts":1363913987247,"patch":[[{"diffs":[[0,"nd: \");\n    "],[-1,"console.log"],[1,"equal"],[0,"(typeof Note"]],"start1":1061,"start2":1061,"length1":35,"length2":29},{"diffs":[[0,"ined');\n    "],[-1,"console.log"],[1,"equal"],[0,"(typeof Note"]],"start1":1120,"start2":1120,"length1":35,"length2":29},{"diffs":[[0,"ined');\n    "],[-1,"console.log"],[1,"equal"],[0,"(typeof Note"]],"start1":1177,"start2":1177,"length1":35,"length2":29},{"diffs":[[0,"');\n    "],[-1,"console.log"],[1,"equal"],[0,"(typeof "]],"start1":1237,"start2":1237,"length1":27,"length2":21}]],"length":9958,"saved":false}
{"ts":1363914053059,"patch":[[{"diffs":[[0,"    "],[-1,"equal"],[1,"ok"],[0,"(fsharp."],[-1,"simpleNotation(),  "],[1,"hasName("],[0,"\"F#\")"],[1,")"],[0,";\n\n "]],"start1":2441,"start2":2441,"length1":45,"length2":32}]],"length":9945,"saved":false}
{"ts":1363914191058,"patch":[[{"diffs":[[0,"[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"C#maj\")"],[1,")"],[0,";\n  "]],"start1":3595,"start2":3595,"length1":30,"length2":25}]],"length":9940,"saved":false}
{"ts":1363914239714,"patch":[[{"diffs":[[0,"[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"F\")"],[1,")"],[0,";\n\n "]],"start1":4871,"start2":4871,"length1":26,"length2":21},{"diffs":[[0,"Cmaj[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"C\")"],[1,")"],[0,";\n\n    /"]],"start1":5104,"start2":5104,"length1":34,"length2":29},{"diffs":[[0,"[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"C\")"],[1,")"],[0,";\n\n\n"]],"start1":5353,"start2":5353,"length1":26,"length2":21},{"diffs":[[0,"emin[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"Em\")"],[1,")"],[0,";\n\n    /"]],"start1":5646,"start2":5646,"length1":35,"length2":30}]],"length":9920,"saved":false}
{"ts":1363914311933,"patch":[[{"diffs":[[0,"\n    });\n   "],[1," ok(Cm11);\n    \n    if( Cm11 )"],[0," ok(Cm11[0]."]],"start1":8734,"start2":8734,"length1":24,"length2":54}]],"length":9950,"saved":false}
{"ts":1363914328437,"patch":[[{"diffs":[[0,"if( Cm11"],[1,"[0]"],[0," ) ok(Cm"]],"start1":8766,"start2":8766,"length1":16,"length2":19}]],"length":9953,"saved":false}
{"ts":1363914331115,"patch":[[{"diffs":[[0," ok(Cm11"],[1,"[0]"],[0,");\n    \n"]],"start1":8746,"start2":8746,"length1":16,"length2":19}]],"length":9956,"saved":false}
{"ts":1363914385021,"patch":[[{"diffs":[[0,"os([8, -"],[-1," "],[0,"1, 8, 8,"]],"start1":8633,"start2":8633,"length1":17,"length2":16},{"diffs":[[0," 8, 6, -"],[-1," "],[0,"1]);\n   "]],"start1":8646,"start2":8646,"length1":17,"length2":16}]],"length":9954,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363946288667,"patch":[[{"diffs":[[0,"[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"Cm11\")"],[1,")"],[0,";\n\n "]],"start1":8788,"start2":8788,"length1":29,"length2":24}]],"length":9949,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364050015427,"patch":[[{"diffs":[[0,").pos,  "],[-1,"-"],[1,"1"],[0,"1);\n    "]],"start1":1586,"start2":1586,"length1":17,"length2":17},{"diffs":[[0,"));\n"],[-1,"\n    // this fails!\n    //equal(cflat.simpleNotation(), "],[1,"    ok(fsharp.hasName(\"Gb\"));\n\n    // test relative positions of double flat edge cases. Say, C has position 0, but Cb should have 11\n    // this should be 11\n    equal( Note.fromNotation(\"Cb\").relPos(), 11 );\n    \n    console.log( \"CFlat rel pos: \" + cflat.relPos() + \" | \" + Note.fromNotation(\"Cb\").relPos() );\n    ok(cflat.hasName(\"Cb\"));\n    \n    // test it for a higher note\n    var cf1 = Note.fromNotation(\"Cb3\");\n    ok( cf1.hasName("],[0," \"Cb\""],[1," ) "],[0,");\n\n"]],"start1":2467,"start2":2467,"length1":69,"length2":456},{"diffs":[[0,"    "],[-1,"//equal"],[1,"ok"],[0,"(Not"]],"start1":2955,"start2":2955,"length1":15,"length2":10},{"diffs":[[0,"b\")."],[-1,"simpleNotation(),  \"Fb\""],[1,"hasName(\"Fb\"));\n    ok(Note.fromNotation(\"Fb\").hasName(\"E\"));\n    ok(Note.fromNotation(\"Fb\").hasName(\"D##\")"],[0,");\n "]],"start1":2982,"start2":2982,"length1":31,"length2":115}]],"length":10415,"saved":false}
{"ts":1364050183899,"patch":[[{"diffs":[[0,"arnings\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":1008,"start2":1008,"length1":24,"length2":26},{"diffs":[[0,"e fine:\n    "],[1,"//"],[0,"console.log("]],"start1":1325,"start2":1325,"length1":24,"length2":26},{"diffs":[[0,"s: \");\n    \n    "],[1,"//"],[0,"console.log(\"B\")"]],"start1":1360,"start2":1360,"length1":32,"length2":34},{"diffs":[[0,"  11);\n    \n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(\"Gb\""]],"start1":1433,"start2":1433,"length1":32,"length2":34},{"diffs":[[0,",  6);\n    \n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(\"Dbb"]],"start1":1507,"start2":1507,"length1":32,"length2":34},{"diffs":[[0,"  11);\n    \n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(\"Fx "]],"start1":1602,"start2":1602,"length1":32,"length2":34},{"diffs":[[0,";\n    \n    \n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(\"Fx "]],"start1":1697,"start2":1697,"length1":32,"length2":34},{"diffs":[[0," 11 );\n    \n    "],[-1,""],[0,""],[1,"//"],[0,"console.log( \"CF"]],"start1":2688,"start2":2688,"length1":32,"length2":34},{"diffs":[[0," octave\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":3128,"start2":3128,"length1":24,"length2":26},{"diffs":[[0,"));\n    });\n"],[1,"    \n"],[0,"    ok(Fmaj["]],"start1":5332,"start2":5332,"length1":24,"length2":29}]],"length":10438,"saved":false}
{"ts":1364050231560,"patch":[[{"diffs":[[0,"(\"C\");\n    \n    "],[1,"//"],[0,"console.log( cma"]],"start1":3459,"start2":3459,"length1":32,"length2":34},{"diffs":[[0,"og( cmaj );\n"],[-1,""],[0,"    // check"]],"start1":3486,"start2":3486,"length1":24,"length2":24},{"diffs":[[0,"\"D5\");\n    \n    "],[1,"//"],[0,"console.log( dma"]],"start1":3745,"start2":3745,"length1":32,"length2":34},{"diffs":[[0,",7] );\n    \n    "],[1,"//"],[0,"console.log( cho"]],"start1":3903,"start2":3903,"length1":32,"length2":34},{"diffs":[[0,",24] );\n"],[-1,""],[0,"    "],[1,"//"],[0,"console."]],"start1":4158,"start2":4158,"length1":20,"length2":22},{"diffs":[[0,"FRET */\n    "],[1,"//"],[0,"console.log("]],"start1":5017,"start2":5017,"length1":24,"length2":26}]],"length":10448,"saved":false}
{"ts":1364050497109,"patch":[[{"diffs":[[0,"hord) {\n        "],[1,"//"],[0,"console.log(chor"]],"start1":5299,"start2":5299,"length1":32,"length2":34}]],"length":10450,"saved":false}
{"ts":1364079671956,"patch":[[{"diffs":[[0,"j7\") );\n    "],[1,"//"],[0,"ok( !dmaj7.h"]],"start1":3855,"start2":3855,"length1":24,"length2":26}]],"length":10979,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364080049317,"patch":[[{"diffs":[[0,"C 6 note\");\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(f);\n"]],"start1":426,"start2":426,"length1":32,"length2":34},{"diffs":[[0," // "],[-1,"NOTE: this doesn't work!"],[1,"test hasName() function some more"],[0,"\n   "]],"start1":2944,"start2":2944,"length1":32,"length2":41},{"diffs":[[0,"e(\"D##\"));\n    \n"],[1,"    \n    \n"],[0,"    // test octa"]],"start1":3112,"start2":3112,"length1":32,"length2":42},{"diffs":[[0,"  \n    \n"],[1,"    // test wrong values\n    equal( Note.fromNotation(\"\"), null);\n    \n    ok( Note.fromPos( -1 ).hasName(\"Cb\") );\n    \n"],[0,"});\n    "]],"start1":3343,"start2":3343,"length1":16,"length2":136},{"diffs":[[0,"on(\"Dmaj7\");"],[1,"\n    \n    ok( !dmaj7.hasName(\"Cmaj7\") );\n    //ok( !dmaj7.hasName(\"D\") );\n    \n    "],[0,"\n\n    // tra"]],"start1":3810,"start2":3810,"length1":24,"length2":107},{"diffs":[[0,"[0,4,7] );\n    \n"],[1,"    console.log( chords1 );\n    \n"],[0,"    //console.lo"]],"start1":4123,"start2":4123,"length1":32,"length2":65},{"diffs":[[0,"[0]."],[-1,"notation() == \"Cmaj\");"],[1,"hasName(\"Cmaj\" ) );\n    \n    ok( chords1[0].hasName(\"Cmaj\") );\n    ok( chords1[0].hasName(\"B#maj\") );\n    \n    // check if not for a reason two chord names always match\n    "],[0,"\n   "]],"start1":4230,"start2":4230,"length1":30,"length2":181},{"diffs":[[0," chords4 = Chord"],[1,"s"],[0,".fromNotes( [ 0,"]],"start1":4626,"start2":4626,"length1":32,"length2":33},{"diffs":[[0," chords5 = Chord"],[1,"s"],[0,".fromNotes( [ 0,"]],"start1":4685,"start2":4685,"length1":32,"length2":33},{"diffs":[[0,";\n    \n    \n    "],[1,"//"],[0,"_.each(chords1, "]],"start1":4735,"start2":4735,"length1":32,"length2":34},{"diffs":[[0,"ion()); });\n    "],[1,"//"],[0,"_.each(chords2, "]],"start1":4809,"start2":4809,"length1":32,"length2":34},{"diffs":[[0,"ion()); });\n    "],[1,"//"],[0,"_.each(chords3, "]],"start1":4883,"start2":4883,"length1":32,"length2":34},{"diffs":[[0,");\n    \n    "],[1,"//"],[0,"_.each(chord"]],"start1":4966,"start2":4966,"length1":24,"length2":26},{"diffs":[[0,")); });\n    "],[1,"//"],[0,"_.each(chord"]],"start1":5040,"start2":5040,"length1":24,"length2":26},{"diffs":[[0,"   // F\n    "],[-1,""],[0,""],[1,"//"],[0,"console.info"]],"start1":5570,"start2":5570,"length1":24,"length2":26},{"diffs":[[0,"sName(\"F"],[-1,""],[0,""],[1,"maj"],[0,"\"));\n\n  "]],"start1":5800,"start2":5800,"length1":16,"length2":19},{"diffs":[[0,"ion());\n    });\n"],[1,"    console.log( Cmaj[0].names ); \n"],[0,"    ok(Cmaj[0].h"]],"start1":6007,"start2":6007,"length1":32,"length2":67},{"diffs":[[0,"other C\n    "],[-1,""],[0,""],[1,"//"],[0,"console.info"]],"start1":6098,"start2":6098,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":6250,"start2":6250,"length1":32,"length2":34},{"diffs":[[0,"guitar!\n    "],[1,"//"],[0,"console.info"]],"start1":6399,"start2":6399,"length1":24,"length2":26},{"diffs":[[0,"2 2 0 0 "],[-1,"0"],[1,"x"],[0," )\");\n  "]],"start1":6446,"start2":6446,"length1":17,"length2":17},{"diffs":[[0,", 0, 0, "],[-1,"0"],[1,"-1"],[0,"]);\n    "]],"start1":6511,"start2":6511,"length1":17,"length2":18},{"diffs":[[0,"hord) {\n        "],[1,"//"],[0,"console.log(chor"]],"start1":6552,"start2":6552,"length1":32,"length2":34},{"diffs":[[0,"r chord\n    "],[-1,""],[0,""],[1,"//"],[0,"console.info"]],"start1":6666,"start2":6666,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":6810,"start2":6810,"length1":32,"length2":34},{"diffs":[[0,"inor 7!\n    "],[-1,""],[0,""],[1,"//"],[0,"console.warn"]],"start1":7012,"start2":7012,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":7166,"start2":7166,"length1":32,"length2":34},{"diffs":[[0,"\n\n    // A7\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(\"Loo"]],"start1":7258,"start2":7258,"length1":32,"length2":34},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":7412,"start2":7412,"length1":32,"length2":34},{"diffs":[[0,"\n\n    // A7\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(\"Loo"]],"start1":7502,"start2":7502,"length1":32,"length2":34},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":7654,"start2":7654,"length1":32,"length2":34},{"diffs":[[0,"hord) {\n        "],[1,"//"],[0,"console.log(chor"]],"start1":7898,"start2":7898,"length1":32,"length2":34},{"diffs":[[0,"(A73[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"A7\")"],[1," )"],[0,";\n\n    /"]],"start1":7961,"start2":7961,"length1":35,"length2":31},{"diffs":[[0,"/ Bm7b5\n    "],[1,"//"],[0,"console.log("]],"start1":7992,"start2":7992,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[1,"//"],[0,"console.log(chor"]],"start1":8151,"start2":8151,"length1":32,"length2":34},{"diffs":[[0,"[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"Bm7b5\")"],[1,")"],[0,";\n\n "]],"start1":8220,"start2":8220,"length1":30,"length2":25},{"diffs":[[0,"hord) {\n        "],[1,"//"],[0,"console.log(chor"]],"start1":8403,"start2":8403,"length1":32,"length2":34},{"diffs":[[0,"[0]."],[-1,"notation() =="],[1,"hasName("],[0," \"Bdim7\""],[1," )"],[0,");\n\n"]],"start1":8471,"start2":8471,"length1":29,"length2":26},{"diffs":[[0,"/ Gmaj7\n    "],[1,"//"],[0,"console.log("]],"start1":8502,"start2":8502,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[1,"//"],[0,"console.log(chor"]],"start1":8660,"start2":8660,"length1":32,"length2":34},{"diffs":[[0,"[0]."],[-1,"notation() =="],[1,"hasName("],[0," \"Gmaj7\""],[1," )"],[0,");\n\n"]],"start1":8729,"start2":8729,"length1":29,"length2":26},{"diffs":[[0," // C#9\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":8788,"start2":8788,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":8927,"start2":8927,"length1":32,"length2":34},{"diffs":[[0," // Am6\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":9047,"start2":9047,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":9185,"start2":9185,"length1":32,"length2":34},{"diffs":[[0,"// C6/9\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":9283,"start2":9283,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":9418,"start2":9418,"length1":32,"length2":34},{"diffs":[[0,"// Cm11\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":9544,"start2":9544,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":9683,"start2":9683,"length1":32,"length2":34},{"diffs":[[0," // G13\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":9841,"start2":9841,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":9979,"start2":9979,"length1":32,"length2":34},{"diffs":[[0,"/ G b13\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":10078,"start2":10078,"length1":24,"length2":26},{"diffs":[[0,"hord) {\n        "],[-1,""],[0,""],[1,"//"],[0,"console.log(chor"]],"start1":10220,"start2":10220,"length1":32,"length2":34},{"diffs":[[0,"ation(\"c\");\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(c);\n"]],"start1":10423,"start2":10423,"length1":32,"length2":34},{"diffs":[[0,"ation(\"G\");\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(g);\n"]],"start1":10506,"start2":10506,"length1":32,"length2":34},{"diffs":[[0,"r, c);\n    \n    "],[-1,""],[0,""],[1,"//"],[0,"console.log(vars"]],"start1":10640,"start2":10640,"length1":32,"length2":34},{"diffs":[[0,"h(\"c\");\n    "],[-1,""],[0,""],[1,"//"],[0,"console.log("]],"start1":10711,"start2":10711,"length1":24,"length2":26}]],"length":10964,"saved":false}
{"ts":1364080094994,"patch":[[{"diffs":[[0,"[0]."],[-1,"hasName("],[1,"notation() =="],[0," \"Gmaj7\""],[-1," )"],[0,");\n\n"]],"start1":8729,"start2":8729,"length1":26,"length2":29}]],"length":10967,"saved":false}
{"ts":1364080742149,"patch":[[{"diffs":[[0,"\"Bm7b5\")"],[1,",\"Looking for Bm7b5 ( x 2 3 2 3 x )\""],[0,");\n"],[-1,""],[0,"\n    // "]],"start1":8232,"start2":8232,"length1":19,"length2":55},{"diffs":[[0,"Bdim7\" )"],[1,",\"Looking for Bdim ( x 2 3 1 3 x )\""],[0,");\n\n    "]],"start1":8521,"start2":8521,"length1":16,"length2":51},{"diffs":[[0," \"Gmaj7\""],[1,",\"Looking for Gmaj7 ( 3 x 4 4 3 )\""],[0,");\n\n    "]],"start1":8817,"start2":8817,"length1":16,"length2":50},{"diffs":[[0,"n() == \""],[1,"C#9\",\"Looking for "],[0,"C#9\");\n\n"]],"start1":9114,"start2":9114,"length1":16,"length2":34},{"diffs":[[0,"n() == \""],[1,"Am6\",\"Looking for "],[0,"Am6\");\n\n"]],"start1":9389,"start2":9389,"length1":16,"length2":34},{"diffs":[[0,"n() == \""],[1,"C6/9\", \"Looking for "],[0,"C6/9\");\n"]],"start1":9640,"start2":9640,"length1":16,"length2":36},{"diffs":[[0,"ion());\n    });\n"],[-1,""],[0,"    ok(Cm11[0]);"]],"start1":9888,"start2":9888,"length1":32,"length2":32},{"diffs":[[0,"(Cm11[0]"],[1,", \"Looking for Cm11\""],[0,");\n    \n"]],"start1":9910,"start2":9910,"length1":16,"length2":36}]],"length":11148,"saved":false}
{"ts":1364080794642,"patch":[[{"diffs":[[0,"== \"Gm7\""],[1,",\"Looking for Gm7 (3, 5, 3, 3, 3, 3)\""],[0,");\n"],[-1,""],[0,"\n    // "]],"start1":7248,"start2":7248,"length1":19,"length2":56},{"diffs":[[0,"tation() == \"A7\""],[1,",\"Looking for A7 (5, 7, 5, 6, 5, 5)\""],[0,");\n\n    // A7\n  "]],"start1":7521,"start2":7521,"length1":32,"length2":68},{"diffs":[[0," == \"A7\""],[1,",\"Looking for A7 (x 0 2 0 2 0)\""],[0,");\n\n    "]],"start1":7808,"start2":7808,"length1":16,"length2":47},{"diffs":[[0,"ion());\n    });\n"],[-1,""],[0,"    ok(A73[0].ha"]],"start1":8043,"start2":8043,"length1":32,"length2":32},{"diffs":[[0,"me(\"A7\")"],[1,",\"Looking for A7 (5 x 5 6 5 x)\""],[0," );\n\n   "]],"start1":8078,"start2":8078,"length1":16,"length2":47}]],"length":11283,"saved":false}
{"ts":1364080898028,"patch":[[{"diffs":[[0,");\n    \n"],[-1,""],[0,""],[1,"});\n\ntest( \"Guitar object\", function(){"],[0,"\n\n    /*"]],"start1":5119,"start2":5119,"length1":16,"length2":55},{"diffs":[[0," == \"E3\""],[-1,""],[0,""],[1,",\"E3\""],[0,");\n    o"]],"start1":5392,"start2":5392,"length1":16,"length2":21},{"diffs":[[0,"on() == \"F3\""],[-1,""],[0,""],[1,",\"F3\""],[0,");\n    \n    "]],"start1":5569,"start2":5569,"length1":24,"length2":29},{"diffs":[[0,"(\"Fmaj\")"],[-1,""],[0,""],[1,",\"Looking for F ( 1 3 3 2 1 1 )\""],[0,");\n\n    "]],"start1":5854,"start2":5854,"length1":16,"length2":48},{"diffs":[[0,"hasName(\"C\")"],[-1,""],[0,""],[1,",\"Looking for C ( x 3 5 5 5 3 )\""],[0,");\n\n    // a"]],"start1":6154,"start2":6154,"length1":24,"length2":56},{"diffs":[[0,"ame(\"C\")"],[-1,""],[0,""],[1,",\"Looking for C ( x 3 2 0 1 0 )\""],[0,");\n\n\n   "]],"start1":6439,"start2":6439,"length1":16,"length2":48},{"diffs":[[0,"\");\n"],[-1,"});\n\ntest( \"Guitar object\", function(){"],[0,"\n   "]],"start1":10776,"start2":10776,"length1":47,"length2":8}]],"length":11389,"saved":false}
{"ts":1364080954535,"patch":[[{"diffs":[[0,"(G13[0]."],[-1,"notation() == \""],[1,"hasName(\"G13\"),\"Looking for "],[0,"G13\");\n\n"]],"start1":10506,"start2":10506,"length1":31,"length2":44},{"diffs":[[0,"Gb13[0]."],[-1,"notation() == \""],[1,"hasName(\"G b13\"),\"Looking for "],[0,"G b13\");"]],"start1":10761,"start2":10761,"length1":31,"length2":46}]],"length":11417,"saved":false}
{"ts":1364080960863,"patch":[[{"diffs":[[0,"    "],[-1,"\n\n    var guitar = new Guitar();\n    "],[0,"\n   "]],"start1":10809,"start2":10809,"length1":45,"length2":8}]],"length":11380,"saved":false}
{"ts":1364080994884,"patch":[[{"diffs":[[0,"r G b13\");\n\n"],[1,"\n});\n\ntest( \"MUSIQ.match and similar\", function(){\n"],[0,"    \n    var"]],"start1":10797,"start2":10797,"length1":24,"length2":75}]],"length":11431,"saved":false}
{"ts":1364081019631,"patch":[[{"diffs":[[0,"unction(){\n    \n"],[1,"    var guitar = new Guitar();\n    \n"],[0,"    var c = Chor"]],"start1":10849,"start2":10849,"length1":32,"length2":68}]],"length":11467,"saved":false}
{"ts":1364083063618,"patch":[[{"diffs":[[0,"[0]."],[-1,"notation() == "],[1,"hasName("],[0,"\"C#9\""],[1,")"],[0,",\"Lo"]],"start1":9383,"start2":9383,"length1":27,"length2":22}]],"length":11462,"saved":false}
