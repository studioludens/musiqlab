{"ts":1360245919497,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var util = require(\"util\");\nvar server = require(\"http\");  \nvar fs = require('fs');\nvar path = require('path');\n\n/**\n * folder locations\n */\nvar publicFolder = './public';\nvar htmlFolder = 'html';\nvar styleFolder = 'style';\nvar scriptFolder = 'script';\n\n/**\n * create a server\n */\n \nserver.createServer(function(request,response){  \n    \n    console.log('request starting...');\n     \n    var requestURL = request.url;\n    \n    if( requestURL == '/') requestURL = '/index.html';\n    \n    // default file path\n    var filePath = publicFolder + '/'  + requestURL;\n    \n         \n    var extname = path.extname(requestURL);\n    \n    var contentType = 'text/html';\n    \n    filePath = publicFolder + '/' + requestURL;\n    \n    switch (extname) {\n        case '.js':\n            \n            contentType = 'text/javascript';\n            break;\n        case '.css':\n            \n            contentType = 'text/css';\n            break;\n        default:\n            \n            break;\n    }\n    \n    console.log(\"Serving \" + filePath);\n     \n    fs.exists(filePath, function(exists) {\n     \n        if (exists) {\n            fs.readFile(filePath, function(error, content) {\n                if (error) {\n                    response.writeHead(500);\n                    response.end();\n                }\n                else {\n                    response.writeHead(200, { 'Content-Type': contentType });\n                    response.end(content, 'utf-8');\n                }\n            });\n        }\n        else {\n            response.writeHead(404);\n            response.end();\n        }\n    });\n    \n}).listen(8080);  \n\nutil.puts(\"Server Running on 8080\");  \n\n"]],"start1":0,"start2":0,"length1":0,"length2":1655}]],"length":1655}
{"contributors":[],"silentsave":false,"ts":1360974017754,"patch":[[{"diffs":[[1,"/**\n * Just a simple file server that sends the contents\n * of the public directory to the web browser.\n * \n * TODO: support different mime-types\n * \n */\n"],[0,"var util = r"]],"start1":0,"start2":0,"length1":12,"length2":166}]],"length":1809,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361033505568,"patch":[[{"diffs":[[0,".listen("],[-1,"8080"],[1,"process.env.PORT"],[0,");  \n\nut"]],"start1":1751,"start2":1751,"length1":20,"length2":32},{"diffs":[[0," on "],[-1,"8080\""],[1,"\" + process.env.PORT"],[0,");  "]],"start1":1806,"start2":1806,"length1":13,"length2":28}]],"length":1836,"saved":false}
